{"ast":null,"code":"var _jsxFileName = \"/Users/pablorobredo/Desktop/WORK/Demo/DemoApp/src/Form2.js\",\n  _s = $RefreshSig$();\nimport './Form.css';\nimport { useState } from 'react';\nimport Modal from \"./Modal\";\n\n// function OpenModal(){\n//     const [active, setActive] = useState(false);\n\n//      const toggle = () => {\n//         setActive(!active)\n//      }\n//      return (\n//         <div className='img'>\n//             <button onClick={toggle}>Imagen</button>\n//             <Modal active={active} toggle={toggle}>\n//                 {/* <img src=\"./img/q1.png\" alt='diametro'></img> */}\n//                 <h1>Hola</h1>\n//             </Modal>\n//         </div>\n//      )\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst request = async data => {\n  const rules = {\n    input1: {\n      min: 150\n    },\n    input2: {\n      min: 150\n    },\n    input3: {\n      min: 120\n    },\n    input4: {\n      min: 100\n    },\n    input5: {\n      min: 150\n    },\n    input6: {\n      min: 80\n    },\n    input7: {\n      min: 120\n    },\n    input8: {\n      min: 120\n    },\n    input9: {\n      min: 120\n    },\n    input10: {\n      min: 5\n    },\n    input11: {\n      min: 80\n    },\n    input12: {\n      min: 15\n    },\n    input13: {\n      min: 80,\n      max: 110\n    }\n  };\n  const adapted = Object.keys(data).reduce((acc, key) => {\n    const {\n      min,\n      max\n    } = rules[key];\n    const value = data[key];\n    if (value < min || value > max) {\n      acc[key] = 'unadapted';\n    } else {\n      acc[key] = 'adapted';\n    }\n    return acc;\n  }, {});\n  console.log(adapted);\n  const rate = Object.values(adapted).filter(value => value === 'adapted');\n  const result = Math.round(rate.length * 100 / 13);\n  if (alert(`Su vivienda se encuentra adaptado en un ${result}%`)) {} else window.location.reload();\n};\nfunction Form2() {\n  _s();\n  const [modalOpen1, setmodalOpen1] = useState(false);\n  const [Form2, setForm2] = useState({\n    input1: '',\n    input2: '',\n    input3: '',\n    input4: '',\n    input5: '',\n    input6: '',\n    input7: '',\n    input8: '',\n    input9: '',\n    input10: '',\n    input11: '',\n    input12: '',\n    input13: ''\n  });\n  const handleOpenModal = () => {\n    setmodalOpen1(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"root\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"document\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"Header\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: require('./img/vidapp.png'),\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fieldset\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Vest\\xEDbulos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vestibulo\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"1. Introduzca en cent\\xEDmetros el di\\xE1metro de la circunferencia despejada de mayor tama\\xF1o que puede caber dentro del espacio de vest\\xEDbulo o entrada de la vivienda, estando todas las puertas abiertas.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"vestibulo2\",\n              value: Form2.input1,\n              onChange: e => setForm2(lastValue => ({\n                ...lastValue,\n                input1: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fieldset\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Pasillos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pasillo\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Importante: En lo referente al pasillo nos interesa prestar atenci\\xF3n al ancho libre del mismo, es decir, al espacio despejado para caminar a trav\\xE9s de \\xE9l. El pasillo puede ser de dos formas:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preguntas\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                children: \"Misma anchura (espacio despejado de paso) a largo de todo el pasillo, es decir, el ancho del pasillo no var\\xEDa en ning\\xFAn momento\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"2. Ancho libre (cm)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"estrechamiento\",\n              value: Form2.input3,\n              onChange: e => setForm2(lastValue => ({\n                ...lastValue,\n                input3: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preguntas\",\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                children: \"O por el contrario, sufrir alg\\xFAn tipo estrechamiento en ciertos puntos (estrechamiento puntual), como puede ser un pilar, un elemento de la pared, un mueble, etc; en dicho punto el pasillo pasa a tener un espacio despejado de paso de menor tama\\xF1o.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"3. Ancho libre (cm)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"estrechamiento\",\n              value: Form2.input3,\n              onChange: e => setForm2(lastValue => ({\n                ...lastValue,\n                input3: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"4. Anchura del estrechamiento (cm)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"estrechamiento\",\n              value: Form2.input4,\n              onChange: e => setForm2(lastValue => ({\n                ...lastValue,\n                input4: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"5. Ancho libre en el punto del estrechamiento (cm)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"estrechamiento\",\n              value: Form2.input4,\n              onChange: e => setForm2(lastValue => ({\n                ...lastValue,\n                input4: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preguntas\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                children: \"En caso de que su pasillo tenga una longitud de 10 metros o m\\xE1s indique por favor su anchura (cm)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"6. Anchura libre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"estrechamiento\",\n              value: Form2.input5,\n              onChange: e => setForm2(lastValue => ({\n                ...lastValue,\n                input5: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fieldset\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Huecos de paso\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"7.  Con la puerta de entrada a la vivienda totalmente abierta, mida en cent\\xEDmetros el ancho del hueco que queda para pasar a trav\\xE9s de ella.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"hueco1\",\n            value: Form2.input6,\n            onChange: e => setForm2(lastValue => ({\n              ...lastValue,\n              input6: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"8. Introduzca en cent\\xEDmetros el di\\xE1metro de la circunferencia despejada de mayor tama\\xF1o que puede caber a ambos lados de la puerta de entrada de la vivienda.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"hueco2\",\n            value: Form2.input7,\n            onChange: e => setForm2(lastValue => ({\n              ...lastValue,\n              input7: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fieldset\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Puertas de accesos interiores\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Importante: En esta secci\\xF3n deber\\xE1 tomar medidas de los espacios cercanos a las puertas que acceden a las diferentes habitaciones de su hogar.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"preguntas\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"9. Si las puertas que dan acceso a las habitaciones de su hogar pueden abrirse 90\\xBA o m\\xE1s (hasta formar una L o m\\xE1s), marque esta casilla.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"hueco2\",\n              value: Form2.input14,\n              onChange: e => setForm2(lastValue => ({\n                ...lastValue,\n                input14: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preguntas\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"10. Indique en cent\\xEDmetros la distancia vertical entre el pomo de la puerta y el suelo, es decir, la altura a la que se encuentra el pomo.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                name: \"hueco4\",\n                value: Form2.input8,\n                onChange: e => setForm2(lastValue => ({\n                  ...lastValue,\n                  input8: e.target.value\n                }))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preguntas\",\n              children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  children: \"En caso de que su hogar tenga puertas acristaladas o ventanales y sobre el vidrio exista alg\\xFAn vinilo o pegatina de se\\xF1alizaci\\xF3n, rellene estos apartados:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"11. Anchura de la se\\xF1alizaci\\xF3n\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                name: \"hueco6\",\n                value: Form2.input10,\n                onChange: e => setForm2(lastValue => ({\n                  ...lastValue,\n                  input10: e.target.value\n                }))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preguntas\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  children: \"En caso de que en su hogar tenga puertas de apertura autom\\xE1tica, rellene estos apartados:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"12. Mida en cent\\xEDmetros el ancho del hueco que queda para pasar a trav\\xE9s de ella.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                name: \"hueco6\",\n                value: Form2.input11,\n                onChange: e => setForm2(lastValue => ({\n                  ...lastValue,\n                  input11: e.target.value\n                }))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"13. Indique en segundos el tiempo estimado que transcurre entre que se abre y se vuelve a cerrar.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"hueco6\",\n              value: Form2.input12,\n              onChange: e => setForm2(lastValue => ({\n                ...lastValue,\n                input12: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fieldset\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Ventanas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Importante: En este campo se hace referencia a la altura a la que se encuentran en mecanismo de apertura de las ventanas de su hogar. Esta medida se toma desde el suelo hasta el pomo, manivela o hendidura que se use para abrir y cerrar la ventana.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"14. Indique en cent\\xEDmetros la distancia vertical entre el suelo y el elemento de apertura de la ventana, es decir, la altura a la que se encuentra.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"alturaV\",\n            value: Form2.input13,\n            onChange: e => setForm2(lastValue => ({\n              ...lastValue,\n              input13: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submitDiv\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn\",\n          onClick: async () => {\n            const data = await request(Form2);\n            setForm2(data);\n          },\n          children: \"Calcular\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      estado: modalOpen1,\n      setEstado: setmodalOpen1,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Aviso \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Para utilizar esta herramienta ser\\xE1 necesario que tome medidas sobre diferentes localizaciones en el interior de su vivienda...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(Form2, \"b40eWCbl8BwFU7qKp9AEFSFgI20=\");\n_c = Form2;\nexport default Form2;\nvar _c;\n$RefreshReg$(_c, \"Form2\");","map":{"version":3,"names":["useState","Modal","request","data","rules","input1","min","input2","input3","input4","input5","input6","input7","input8","input9","input10","input11","input12","input13","max","adapted","Object","keys","reduce","acc","key","value","console","log","rate","values","filter","result","Math","round","length","alert","window","location","reload","Form2","modalOpen1","setmodalOpen1","setForm2","handleOpenModal","require","e","lastValue","target","input14"],"sources":["/Users/pablorobredo/Desktop/WORK/Demo/DemoApp/src/Form2.js"],"sourcesContent":["import './Form.css';\nimport { useState } from 'react';\nimport Modal from \"./Modal\";\n\n\n\n// function OpenModal(){\n//     const [active, setActive] = useState(false);\n    \n//      const toggle = () => {\n//         setActive(!active)\n//      }\n//      return (\n//         <div className='img'>\n//             <button onClick={toggle}>Imagen</button>\n//             <Modal active={active} toggle={toggle}>\n//                 {/* <img src=\"./img/q1.png\" alt='diametro'></img> */}\n//                 <h1>Hola</h1>\n//             </Modal>\n//         </div>\n//      )\n// }\n\nconst request = async (data) => { \n    const rules = {\n        input1: { min: 150},\n        input2: { min: 150},\n        input3: { min: 120},\n        input4: { min: 100},\n        input5: { min: 150},\n        input6: { min: 80},\n        input7: { min: 120},\n        input8: { min: 120},\n        input9: { min: 120},\n        input10: { min: 5},\n        input11: { min: 80},\n        input12: { min: 15},\n        input13: { min: 80, max: 110},\n    }\n    \n    \n         const adapted =  Object.keys(data).reduce((acc, key) => {\n        const { min, max } = rules[key]\n        const value = data[key]\n        if (value < min || value > max) {\n            acc[key] = 'unadapted'\n        } else {\n            acc[key] = 'adapted'\n        }\n        return acc\n    }, {})\n    \n    console.log(adapted);\n    const rate = Object.values(adapted).filter((value) => value === 'adapted')\n    const result = Math.round((rate.length * 100)/13)\n    \n    if(alert(`Su vivienda se encuentra adaptado en un ${result}%`)){}\nelse    window.location.reload(); \n  \n  \n\n};\n\nfunction Form2() {\n    const [modalOpen1, setmodalOpen1] = useState(false);\n    const [Form2, setForm2] = useState({\n        input1: '',\n        input2: '',\n        input3: '',\n        input4: '',\n        input5: '',\n        input6: '',\n        input7: '',\n        input8: '',\n        input9: '',\n        input10: '',\n        input11: '',\n        input12: '',\n        input13: '',\n    });\n\n    const handleOpenModal = () => {\n        setmodalOpen1(true);\n      };\n    return (\n    <div id='root'>\n        <div className='document'>\n                <header className='Header'>\n                <img src={require('./img/vidapp.png')} alt=\"\" />\n                </header>\n            \n            {/* <h2>Suelos</h2>\n            <fieldset>\n                <div className='interior'>\n                    <p>\n                        <strong>\n                            Importante : Echemos un vistazo tanto al material\n                            como a la inclinación del mismo, por favor, marque\n                            la casilla para habilitar el resto de campos.\n                        </strong>\n                    </p>\n                    <label>\n                        <i>\n                            En caso que quiera indicar la inForm2ación en cuanto\n                            al suelo interior de su hogar indique el material.\n                        </i>\n                    </label>{' '}\n                    <br></br>\n                    <label>Material</label>\n                    <input type='text' name='material'  />\n                    \n                </div>\n                <div className='exterior'>\n                    <label>\n                        <i>\n                            Sí se trata del suelo que se encuentra en el exterior de la vivienda indique el material.\n                        </i>\n                    </label>\n                    <br></br>\n                    <label>Material</label>\n                    <input type='text' name='material'  />\n                    \n                </div>\n            </fieldset> */}\n            <div className='fieldset'>\n                <h2>Vestíbulos</h2>\n                \n                <div className='vestibulo'>\n                    <div>\n                        <label>\n                            1. Introduzca en centímetros el diámetro de la circunferencia despejada de mayor tamaño que puede caber dentro del espacio de vestíbulo o entrada de la vivienda, estando todas las puertas abiertas.\n                        </label>\n                        <input\n                            type='number'\n                            name='vestibulo2'\n                            value={Form2.input1}\n                            onChange={(e) =>\n                                setForm2((lastValue) => ({\n                                    ...lastValue,\n                                    input1: e.target.value,\n                                }))\n                            }\n                        />\n                    </div>\n                </div>\n            </div>\n            <div className='fieldset'>\n                <h2>Pasillos</h2>\n                <div className='pasillo'>\n                    <p>\n                        <strong>\n                            Importante: En lo referente al pasillo \n                            nos interesa prestar atención al ancho libre del mismo, \n                            es decir, al espacio despejado para caminar a través de\n                            él. El pasillo puede ser de dos formas: \n                        </strong>\n                    </p>\n                    <div className='preguntas'>\n                        <label>\n                            <i>\n                            Misma anchura (espacio despejado de paso) a largo de todo el pasillo, es decir, el ancho del pasillo no varía en ningún momento\n                            </i>\n                        </label>\n                        <br></br>\n                        <label>2. Ancho libre (cm)</label>\n                        <input\n                            type='number'\n                            name='estrechamiento'\n                            value={Form2.input3}\n                            onChange={(e) =>\n                                setForm2((lastValue) => ({\n                                    ...lastValue,\n                                    input3: e.target.value,\n                                }))\n                            }\n                        />\n                    </div>\n                    <div className='preguntas'>\n                        <br></br>\n                        <label>\n                            <i>\n                            O por el contrario, sufrir algún tipo estrechamiento en ciertos puntos (estrechamiento puntual),\n                            como puede ser un pilar, un elemento de la pared, un mueble, etc; en dicho punto el pasillo pasa \n                            a tener un espacio despejado de paso de menor tamaño.\n\n                            </i>\n                        </label>\n                        <br></br>\n                        <label>3. Ancho libre (cm)</label>\n                        <input\n                            type='number'\n                            name='estrechamiento'\n                            value={Form2.input3}\n                            onChange={(e) =>\n                                setForm2((lastValue) => ({\n                                    ...lastValue,\n                                    input3: e.target.value,\n                                }))\n                            }\n                        />\n                        <br></br>\n                        <label>4. Anchura del estrechamiento (cm)</label>\n                        <input\n                            type='number'\n                            name='estrechamiento'\n                            value={Form2.input4}\n                            onChange={(e) =>\n                                setForm2((lastValue) => ({\n                                    ...lastValue,\n                                    input4: e.target.value,\n                                }))\n                            }\n                        />\n                        <br></br>\n                        <label>5. Ancho libre en el punto del estrechamiento (cm)</label>\n                        <input\n                            type='number'\n                            name='estrechamiento'\n                            value={Form2.input4}\n                            onChange={(e) =>\n                                setForm2((lastValue) => ({\n                                    ...lastValue,\n                                    input4: e.target.value,\n                                }))\n                            }\n                        />\n                    </div>\n                    <div className='preguntas'>\n                        <label>\n                            <i>\n                                En caso de que su pasillo tenga una longitud de\n                                10 metros o más indique por favor su anchura\n                                (cm)\n                            </i>\n                        </label>\n                        <br></br>\n                        <label>6. Anchura libre</label>    \n                        <input\n                            type='number'\n                            name='estrechamiento'\n                            value={Form2.input5}\n                            onChange={(e) =>\n                                setForm2((lastValue) => ({\n                                    ...lastValue,\n                                    input5: e.target.value,\n                                }))\n                            }\n                        />\n                    </div>\n                </div>\n            </div>\n            <div className='fieldset'>\n                <h2>Huecos de paso</h2>\n                    <div>\n                        <label>\n                            7.  Con la puerta de entrada a la vivienda totalmente abierta, mida en centímetros el ancho del hueco que queda para pasar a través de ella.\n                        </label>\n                        <input\n                            type='number'\n                            name='hueco1'\n                            value={Form2.input6}\n                            onChange={(e) =>\n                                setForm2((lastValue) => ({\n                                    ...lastValue,\n                                    input6: e.target.value,\n                                }))\n                            }\n                        />\n                    </div>\n                    <div>\n                        <label>\n                            8. Introduzca en centímetros el diámetro de la circunferencia despejada de mayor tamaño que puede caber a ambos lados de la puerta de entrada de la vivienda.\n                        </label>\n                        <input\n                            type='number'\n                            name='hueco2'\n                            value={Form2.input7}\n                            onChange={(e) =>\n                                setForm2((lastValue) => ({\n                                    ...lastValue,\n                                    input7: e.target.value,\n                                }))\n                            }\n                        />\n                    </div>\n            </div>\n            <div className='fieldset'>\n                <h2>Puertas de accesos interiores</h2>\n                    <p>\n                        <strong>\n                        Importante: En esta sección deberá tomar medidas de los espacios cercanos a las puertas que acceden a las diferentes habitaciones de su hogar.\n                        </strong>\n                    </p>\n                    <div className='preguntas'>\n                        {/*                         <p>\n                            <strong>\n                                Importante: En este caso deberá tomar medidas\n                                del espacio libre del area que cubre la puerta\n                                (al abrir y cerrar) de su hogar.\n                            </strong>\n                        </p>{' '} */}\n\n                        <div>\n                            <label>\n                            9. Si las puertas que dan acceso a las habitaciones de su hogar pueden abrirse 90º o más (hasta formar una L o más), marque esta casilla. \n                            </label>\n                            <input\n                                type='checkbox'\n                                name='hueco2'\n                                value={Form2.input14}\n                                onChange={(e) =>\n                                    setForm2((lastValue) => ({\n                                        ...lastValue,\n                                        input14: e.target.value,\n                                    }))\n                                }\n                            />\n                        </div>\n                        <div className='preguntas'>\n                            <div>\n                                <label>\n                                10. Indique en centímetros la distancia vertical entre el pomo de la puerta y el suelo, es decir, la altura a la que se encuentra el pomo. \n                                </label>\n                                <input\n                                    type='number'\n                                    name='hueco4'\n                                    value={Form2.input8}\n                                    onChange={(e) =>\n                                        setForm2((lastValue) => ({\n                                            ...lastValue,\n                                            input8: e.target.value,\n                                        }))\n                                    }\n                                />\n                            </div>\n                            \n                            <div className='preguntas'>\n                                <br></br>\n                                <label>\n                                    <i>\n                                    En caso de que su hogar tenga puertas acristaladas o ventanales y sobre el vidrio exista algún vinilo o pegatina de señalización, rellene estos apartados:\n                                    </i>\n                                </label>\n\n                                {/* <input\n                                    type='checkbox'\n                                    name='hueco6'\n                                   value={Form2.input10}\n                                    onChange={(e) =>\n                                        setForm2((lastValue) => ({\n                                            ...lastValue,\n                                            input10: e.target.value,\n                                        }))\n                                    }\n                                ></input> */}\n                                <br></br>\n                                <label>11. Anchura de la señalización</label>\n                                <input\n                                    type='number'\n                                    name='hueco6'\n                                    value={Form2.input10}\n                                    onChange={(e) =>\n                                        setForm2((lastValue) => ({\n                                            ...lastValue,\n                                            input10: e.target.value,\n                                        }))\n                                    }\n                                />\n                            </div>\n                        </div>\n                        <div className='preguntas'>\n                            <div>\n                                <label>\n                                    <i>\n                                    En caso de que en su hogar tenga puertas de apertura automática, rellene estos apartados: \n                                    </i>\n                                </label>\n                                <br></br>\n                                <label>\n                                12. Mida en centímetros el ancho del hueco que queda para pasar a través de ella.\n\n                                </label>\n                                <input\n                                    type='number'\n                                    name='hueco6'\n                                    value={Form2.input11}\n                                    onChange={(e) =>\n                                        setForm2((lastValue) => ({\n                                            ...lastValue,\n                                            input11: e.target.value,\n                                        }))\n                                    }\n                                />\n                            </div>\n                        </div>\n                        <div>\n                            <label>\n                            13. Indique en segundos el tiempo estimado que transcurre entre que se abre y se vuelve a cerrar. \n                            </label>\n                            <input\n                                type='number'\n                                name='hueco6'\n                                value={Form2.input12}\n                                onChange={(e) =>\n                                    setForm2((lastValue) => ({\n                                        ...lastValue,\n                                        input12: e.target.value,\n                                    }))\n                                }\n                            />\n                        </div>\n                    </div>\n            </div>\n           <div className='fieldset'>\n            <h2>Ventanas</h2>\n                \n                <p>\n                    <strong>\n                    Importante: En este campo se hace referencia a la altura a la que se encuentran \n                    en mecanismo de apertura de las ventanas de su hogar. Esta medida se toma desde \n                    el suelo hasta el pomo, manivela o hendidura que se use para abrir y cerrar la ventana.\n                    </strong>\n                </p>\n                <div>\n                    <label>14. Indique en centímetros la distancia vertical entre el suelo y el elemento de apertura de la ventana, es decir, la altura a la que se encuentra.</label>\n                    <input\n                        type='number'\n                        name='alturaV'\n                        value={Form2.input13}\n                        onChange={(e) =>\n                            setForm2((lastValue) => ({\n                                ...lastValue,\n                                input13: e.target.value,\n                            }))\n                        }\n                    />\n                </div>\n            </div>\n            <div className='submitDiv'>\n                <button\n                    type='submit'\n                    className='btn'\n                    onClick={async () => {\n                        const data = await request(Form2);\n                        setForm2(data);\n                    }}\n                >\n                    Calcular\n                </button>\n            </div>\n        </div>\n        <Modal estado={modalOpen1} setEstado={setmodalOpen1}>\n                <h3>Aviso </h3>\n                <p>\n                Para utilizar esta herramienta será necesario que tome medidas sobre diferentes localizaciones en el interior de su vivienda...\n                </p>\n        </Modal>        \n    </div>\n    );\n}\nexport default Form2;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}