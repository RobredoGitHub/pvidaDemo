{"ast":null,"code":"var _jsxFileName = \"/Users/pablorobredo/Desktop/WORK/Pvida/app/src/Form.js\",\n  _s = $RefreshSig$();\nimport './Form.css';\nimport { useState } from 'react';\n\n// function vestibulo1(x) {\n//     if (x >= 150) {\n//         const vest1 = 'El elemento1 se encuentra adaptado';\n//         console.log(vest1);\n//     } else {\n//         const vest1 = 'El elemento1 no se encuentra adaptado';\n//         console.log(vest1);\n//     }\n// }\n// function vestibulo2(x) {\n//     if (x >= 150) {\n//         const vest2 = 'El elemnto2 se encuentra adaptado';\n//         console.log(vest2);\n//     } else {\n//         const vest2 = 'El elemnto2 no se encuentra adaptado';\n//         console.log(vest2);\n//     }\n// }\n\n// function pasillo1(x) {\n//     if (x >= 120) {\n//         const pas1 = 'El elemnto3 se encuentra adaptado';\n//         console.log(pas1);\n//     } else {\n//         const pas1 = 'El elemnto3 no se encuentra adaptado';\n//         console.log(pas1);\n//     }\n// }\n\n// function pasillo2(x) {\n//     if (x <= 100) {\n//         const pas2 = 'El elemento4 se encuentra adaptado';\n//         console.log(pas2);\n//     } else {\n//         const pas2 = 'El elemento4 no se encuentra adaptado';\n//         console.log(pas2);\n//     }\n// }\n\n// function pasillo3(x) {\n//     if (x >= 150) {\n//         const pas3 = 'El elemento5 se encuentra adaptado';\n//         console.log(pas3);\n//     } else {\n//         const pas3 = 'El elemento5 no se encuentra adaptado';\n//         console.log(pas3);\n//     }\n// }\n\n// function huecos1(x) {\n//     if (x >= 80) {\n//         const hue1 = 'El elemento6 se encuentra adaptado';\n//         console.log(hue1);\n//     } else {\n//         const hue1 = 'El elemento6 no se encuentra adaptado';\n//         console.log(hue1);\n//     }\n// }\n\n// function huecos2(x) {\n//     if (x >= 120) {\n//         const hue2 = 'El elemento7 se encuentra adaptado';\n//         console.log(hue2);\n//     } else {\n//         const hue2 = 'El elemento7 no se encuentra adaptado';\n//         console.log(hue2);\n//     }\n// }\n\n// function huecos3(x) {\n//     if (x <= 120 && x >= 80) {\n//         const hue3 = 'El elemento8 se encuentra adaptado';\n//         console.log(hue3);\n//     } else {\n//         const hue3 = 'El elemento8 no se encuentra adaptado';\n//         console.log(hue3);\n//     }\n// }\n// function huecos4(x) {\n//     if (x === 120) {\n//         const hue4 = 'El elemento9 se encuentra adaptado';\n//         console.log(hue4);\n//     } else {\n//         const hue4 = 'El elemento9 no se encuentra adaptado';\n//         console.log(hue4);\n//     }\n// }\n// function huecos5(x) {\n//     if (x === 5) {\n//         const hue5 = 'El elemento10 se encuentra adaptado';\n//         console.log(hue5);\n//     } else {\n//         const hue5 = 'El elemento10 no se encuentra adaptado';\n//         console.log(hue5);\n//     }\n// }\n// function huecos6(x) {\n//     if (x >= 120) {\n//         const hue6 = 'El elemento11 se encuentra adaptado';\n//         console.log(hue6);\n//     } else {\n//         const hue6 = 'El elemento11 no se encuentra adaptado';\n//         console.log(hue6);\n//     }\n// }\n// function huecos7(x) {\n//     if (x >= 15) {\n//         const hue7 = 'El elemento12 se encuentra adaptado';\n//         console.log(hue7);\n//     } else {\n//         const hue7 = 'El elemento12 no se encuentra adaptado';\n//         console.log(hue7);\n//     }\n// }\n\n// function ventana(x) {\n//     if (x <= 110 && x >= 80) {\n//         const ven = 'El elemento13 se encuentra adaptado';\n//         console.log(ven);\n//     } else {\n//         const ven = 'El elemento13 no se encuentra adaptado';\n//         console.log(ven);\n//     }\n// }\n// function anguloV(x) {\n//     if (x === true) {\n//         const ang = 'El elemento14 se encuentra adaptado';\n//         console.log(ang);\n//     } else {\n//         const ang = 'El elemento14 no se encuentra adaptado';\n//         console.log(ang);\n//     }\n// }\n// function result() {\n//     return console.log(\n//         'El interior de su vivienda se encuentra adaptado en un 50%'\n//     );\n// }\n\n/* function adaptado() {\n    alert('su casa se encuentra adaptada en un 0%');\n    window.location.reload();\n}\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst request = async data => {\n  console.log(data);\n\n  // vestibulo1(data.input1); \n  // vestibulo2(data.input2);\n  // pasillo1(data.input3);\n  // pasillo2(data.input4);\n  // pasillo3(data.input5);\n  // huecos1(data.input6);\n  // huecos2(data.input7);\n  // huecos3(data.input8);\n  // huecos4(data.input9);\n  // huecos5(data.input10);\n  // huecos6(data.input11);\n  // huecos7(data.input12);\n  // ventana(data.input13);\n  // anguloV(data.input14);\n  // result();\n};\n\nfunction Form() {\n  _s();\n  const [form, setForm] = useState({\n    input1: '',\n    input2: '',\n    input3: '',\n    input4: '',\n    input5: '',\n    input6: '',\n    input7: '',\n    input8: '',\n    input9: '',\n    input10: '',\n    input11: '',\n    input12: '',\n    input13: ''\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"root\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"Header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Herramienta para la medici\\xF3n y adaptaci\\xF3n de la vivienda en interiores\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Suelos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"interior\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Importante : Echemos un vistazo tanto al material como a la inclinaci\\xF3n del mismo, por favor, marque la casilla para habilitar el resto de campos.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"En caso que quiera indicar la informaci\\xF3n en cuanto al suelo interior de su hogar marque esta casilla...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"interior\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Material\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"material\",\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Tipo de pendiente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"pendiente\",\n          id: \"\",\n          disabled: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Clase 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Clase 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Clase 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exterior\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"En caso de suelo se encuentre en el exterior de su hogar marque esta casilla...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"exterior\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Material\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"material\",\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Tipo de pendiente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"pendiente\",\n          id: \"\",\n          disabled: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"1\",\n            children: \"Clase 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2\",\n            children: \"Clase 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"3\",\n            children: \"Clase 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Vest\\xEDbulos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vestibulo\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Importante: En este caso deber\\xE1 tomar medidas del espacio libre del area que cubre la puerta (tanto abierta como cerrada) de su hogar.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 25\n          }, this), ' ', /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Diametro de circunferencia libre no barrida por las puertas (cm)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"vestibulo2\",\n            value: form.input1,\n            onChange: e => setForm(lastValue => ({\n              ...lastValue,\n              input1: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: [' ', \"En caso de ascensor marque aqu\\xED la misma medida que en el caso anterior ( Diametro de circunferencia libre no barrida por las puertas del mismo) (cm)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"vestibulo2\",\n            value: form.input2,\n            onChange: e => setForm(lastValue => ({\n              ...lastValue,\n              input2: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pasillos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pasillo\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Importante: En lo referente al pasillo nos interesa prestar atenci\\xF3n al ancho del mismo. Este puede ser de dos formas misma anchura(anchura libre) a largo de todo el corredor, o por el contrario, sufrir alg\\xFAn tipo estrechamiento en ciertos puntos (entrechamiento puntual). Por favor, seg\\xFAn el caso, marque la casilla para habilitar el resto de campos.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 21\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ancho\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [' ', /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"En caso de que la anchura sea la misma a largo del corredor marque esta casilla...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"anchuraLibre\",\n            id: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Ancho libre (cm)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"estrechamiento\",\n            value: form.input3,\n            onChange: e => setForm(lastValue => ({\n              ...lastValue,\n              input3: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"estrecho\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"En caso de que exista un estrechamiento puntual marque esta casilla...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"\",\n            id: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Anchura m\\xEDnima del estrechamiento (cm)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"estrechamiento\",\n            value: form.input4,\n            onChange: e => setForm(lastValue => ({\n              ...lastValue,\n              input4: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"largo\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"En caso de que su pasillo tenga una longitud de 10 metros o m\\xE1s indique por favor su anchura (cm)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"estrechamiento\",\n            value: form.input5,\n            onChange: e => setForm(lastValue => ({\n              ...lastValue,\n              input5: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Huecos de paso\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Anchura libre de paso de las puertas de entrada (cm)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"hueco1\",\n          value: form.input6,\n          onChange: e => setForm(lastValue => ({\n            ...lastValue,\n            input6: e.target.value\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Espacio libre a ambas caras de las puertas (cm)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"hueco2\",\n          value: form.input7,\n          onChange: e => setForm(lastValue => ({\n            ...lastValue,\n            input7: e.target.value\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Puertas de accesos interiores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Importante : En esta secci\\xF3n deber\\xE1 tomar medidas de los espacios cercanos a la puertas que acceden a las diferentes habitaciones de su hogar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 21\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hueco\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Marque esta casilla en caso de que las puertas interiores tengan un \\xE1ngulo de 90\\xBA o superior\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"hueco2\",\n            value: form.input14,\n            onChange: e => setForm(lastValue => ({\n              ...lastValue,\n              input14: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"apertura\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Distancia entre el suelo y el pomo (cm)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"hueco4\",\n              value: form.input8,\n              onChange: e => setForm(lastValue => ({\n                ...lastValue,\n                input8: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Separaci\\xF3n del picaporte al plano de la puerta (cm)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"hueco5\",\n              value: form.input9,\n              onChange: e => setForm(lastValue => ({\n                ...lastValue,\n                input9: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                children: \"En caso de puertas acristaladas/transaparentes, existe se\\xF1alizaci\\xF3n sobre las mismas\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"hueco6\",\n              value: form.input10,\n              onChange: e => setForm(lastValue => ({\n                ...lastValue,\n                input10: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 512,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Anchura de la se\\xF1alizaci\\xF3n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"hueco6\",\n              value: form.input10,\n              onChange: e => setForm(lastValue => ({\n                ...lastValue,\n                input10: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                children: \"En caso de puertas de doble filo(puerta doble) con mecanismo autom\\xE1tico (puerta autom\\xE1tica)de apertura y cierre, marque esta casilla\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 530,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 529,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"hueco6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Anchura m\\xE1xima de paso entre ellas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"hueco6\",\n              value: form.input11,\n              onChange: e => setForm(lastValue => ({\n                ...lastValue,\n                input11: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Tiempo estimado para apertura/cierra (segundos)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"hueco6\",\n            value: form.input12,\n            onChange: e => setForm(lastValue => ({\n              ...lastValue,\n              input12: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Ventanas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Importante: En este campo se hace refrencia a la altura a la que se encuentran en mecanismo de apertura de las ventanas de su hogar. Esta medida se toma desde el suelo hasta la manivela/pomo de la ventana.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 17\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \" Altura de ventanas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"alturaV\",\n          value: form.input13,\n          onChange: e => setForm(lastValue => ({\n            ...lastValue,\n            input13: e.target.value\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submitDiv\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit\",\n        onClick: async () => {\n          const data = await request(form);\n          setForm(data);\n        }\n        /*                     onClick={async () => {\n            alert('su casa se encuentra adaptada en un 20%');\n        }} */,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 9\n  }, this);\n}\n_s(Form, \"0GxC85u6m9NddIneB3myhr9/cwk=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useState","request","data","console","log","Form","form","setForm","input1","input2","input3","input4","input5","input6","input7","input8","input9","input10","input11","input12","input13","e","lastValue","target","value","input14"],"sources":["/Users/pablorobredo/Desktop/WORK/Pvida/app/src/Form.js"],"sourcesContent":["import './Form.css';\nimport { useState } from 'react';\n\n\n\n// function vestibulo1(x) {\n//     if (x >= 150) {\n//         const vest1 = 'El elemento1 se encuentra adaptado';\n//         console.log(vest1);\n//     } else {\n//         const vest1 = 'El elemento1 no se encuentra adaptado';\n//         console.log(vest1);\n//     }\n// }\n// function vestibulo2(x) {\n//     if (x >= 150) {\n//         const vest2 = 'El elemnto2 se encuentra adaptado';\n//         console.log(vest2);\n//     } else {\n//         const vest2 = 'El elemnto2 no se encuentra adaptado';\n//         console.log(vest2);\n//     }\n// }\n\n// function pasillo1(x) {\n//     if (x >= 120) {\n//         const pas1 = 'El elemnto3 se encuentra adaptado';\n//         console.log(pas1);\n//     } else {\n//         const pas1 = 'El elemnto3 no se encuentra adaptado';\n//         console.log(pas1);\n//     }\n// }\n\n// function pasillo2(x) {\n//     if (x <= 100) {\n//         const pas2 = 'El elemento4 se encuentra adaptado';\n//         console.log(pas2);\n//     } else {\n//         const pas2 = 'El elemento4 no se encuentra adaptado';\n//         console.log(pas2);\n//     }\n// }\n\n// function pasillo3(x) {\n//     if (x >= 150) {\n//         const pas3 = 'El elemento5 se encuentra adaptado';\n//         console.log(pas3);\n//     } else {\n//         const pas3 = 'El elemento5 no se encuentra adaptado';\n//         console.log(pas3);\n//     }\n// }\n\n// function huecos1(x) {\n//     if (x >= 80) {\n//         const hue1 = 'El elemento6 se encuentra adaptado';\n//         console.log(hue1);\n//     } else {\n//         const hue1 = 'El elemento6 no se encuentra adaptado';\n//         console.log(hue1);\n//     }\n// }\n\n// function huecos2(x) {\n//     if (x >= 120) {\n//         const hue2 = 'El elemento7 se encuentra adaptado';\n//         console.log(hue2);\n//     } else {\n//         const hue2 = 'El elemento7 no se encuentra adaptado';\n//         console.log(hue2);\n//     }\n// }\n\n// function huecos3(x) {\n//     if (x <= 120 && x >= 80) {\n//         const hue3 = 'El elemento8 se encuentra adaptado';\n//         console.log(hue3);\n//     } else {\n//         const hue3 = 'El elemento8 no se encuentra adaptado';\n//         console.log(hue3);\n//     }\n// }\n// function huecos4(x) {\n//     if (x === 120) {\n//         const hue4 = 'El elemento9 se encuentra adaptado';\n//         console.log(hue4);\n//     } else {\n//         const hue4 = 'El elemento9 no se encuentra adaptado';\n//         console.log(hue4);\n//     }\n// }\n// function huecos5(x) {\n//     if (x === 5) {\n//         const hue5 = 'El elemento10 se encuentra adaptado';\n//         console.log(hue5);\n//     } else {\n//         const hue5 = 'El elemento10 no se encuentra adaptado';\n//         console.log(hue5);\n//     }\n// }\n// function huecos6(x) {\n//     if (x >= 120) {\n//         const hue6 = 'El elemento11 se encuentra adaptado';\n//         console.log(hue6);\n//     } else {\n//         const hue6 = 'El elemento11 no se encuentra adaptado';\n//         console.log(hue6);\n//     }\n// }\n// function huecos7(x) {\n//     if (x >= 15) {\n//         const hue7 = 'El elemento12 se encuentra adaptado';\n//         console.log(hue7);\n//     } else {\n//         const hue7 = 'El elemento12 no se encuentra adaptado';\n//         console.log(hue7);\n//     }\n// }\n\n// function ventana(x) {\n//     if (x <= 110 && x >= 80) {\n//         const ven = 'El elemento13 se encuentra adaptado';\n//         console.log(ven);\n//     } else {\n//         const ven = 'El elemento13 no se encuentra adaptado';\n//         console.log(ven);\n//     }\n// }\n// function anguloV(x) {\n//     if (x === true) {\n//         const ang = 'El elemento14 se encuentra adaptado';\n//         console.log(ang);\n//     } else {\n//         const ang = 'El elemento14 no se encuentra adaptado';\n//         console.log(ang);\n//     }\n// }\n// function result() {\n//     return console.log(\n//         'El interior de su vivienda se encuentra adaptado en un 50%'\n//     );\n// }\n\n/* function adaptado() {\n    alert('su casa se encuentra adaptada en un 0%');\n    window.location.reload();\n}\n */\n\nconst request = async (data) => {\n    console.log(data);\n\n\n\n        // vestibulo1(data.input1); \n        // vestibulo2(data.input2);\n        // pasillo1(data.input3);\n        // pasillo2(data.input4);\n        // pasillo3(data.input5);\n        // huecos1(data.input6);\n        // huecos2(data.input7);\n        // huecos3(data.input8);\n        // huecos4(data.input9);\n        // huecos5(data.input10);\n        // huecos6(data.input11);\n        // huecos7(data.input12);\n        // ventana(data.input13);\n        // anguloV(data.input14);\n        // result();\n\n};\n\nfunction Form() {\n    const [form, setForm] = useState({\n        input1: '',\n        input2: '',\n        input3: '',\n        input4: '',\n        input5: '',\n        input6: '',\n        input7: '',\n        input8: '',\n        input9: '',\n        input10: '',\n        input11: '',\n        input12: '',\n        input13: '',\n    });\n    return (\n        <div id='root'>\n            <header className='Header'>\n                <h1>\n                Herramienta para la medición y adaptación de la vivienda en\n                interiores\n                </h1>\n            </header>\n            \n            <h2>Suelos</h2>\n            <fieldset>\n                <div className='interior'>\n                    <p>\n                        <strong>\n                            Importante : Echemos un vistazo tanto al material\n                            como a la inclinación del mismo, por favor, marque\n                            la casilla para habilitar el resto de campos.\n                        </strong>\n                    </p>\n                    <label>\n                        <i>\n                            En caso que quiera indicar la información en cuanto\n                            al suelo interior de su hogar marque esta casilla...\n                        </i>\n                    </label>{' '}\n                    <input type='checkbox' name='interior' />\n                    <br></br>\n                    <label>Material</label>\n                    <input type='text' name='material' disabled />\n                    <label>Tipo de pendiente</label>\n                    <select name='pendiente' id='' disabled>\n                        <option value=''>Clase 1</option>\n                        <option value=''>Clase 2</option>\n                        <option value=''>Clase 3</option>\n                    </select>\n                </div>\n                <div className='exterior'>\n                    <label>\n                        <i>\n                            En caso de suelo se encuentre en el exterior de su\n                            hogar marque esta casilla...\n                        </i>\n                    </label>\n                    <input type='checkbox' name='exterior' />\n                    <br></br>\n                    <label>Material</label>\n                    <input type='text' name='material' disabled />\n                    <label>Tipo de pendiente</label>\n                    <select name='pendiente' id='' disabled>\n                        <option value='1'>Clase 1</option>\n                        <option value='2'>Clase 2</option>\n                        <option value='3'>Clase 3</option>\n                    </select>\n                </div>\n            </fieldset>\n            <h2>Vestíbulos</h2>\n            <fieldset>\n              \n                <div className='vestibulo'>\n                    <div>\n                        <p>\n                            <strong>\n                                Importante: En este caso deberá tomar medidas\n                                del espacio libre del area que cubre la puerta\n                                (tanto abierta como cerrada) de su hogar.\n                            </strong>\n                        </p>{' '}\n                        <label>\n                            Diametro de circunferencia libre no barrida por las\n                            puertas (cm)\n                        </label>\n                        <input\n                            type='number'\n                            name='vestibulo2'\n                            value={form.input1}\n                            onChange={(e) =>\n                                setForm((lastValue) => ({\n                                    ...lastValue,\n                                    input1: e.target.value,\n                                }))\n                            }\n                        />\n                    </div>\n                    <div>\n                        <label>\n                            <i>\n                                {' '}\n                                En caso de ascensor marque aquí la misma medida\n                                que en el caso anterior ( Diametro de\n                                circunferencia libre no barrida por las puertas\n                                del mismo) (cm)\n                            </i>\n                        </label>\n\n                        <input\n                            type='number'\n                            name='vestibulo2'\n                            value={form.input2}\n                            onChange={(e) =>\n                                setForm((lastValue) => ({\n                                    ...lastValue,\n                                    input2: e.target.value,\n                                }))\n                            }\n                        />\n                    </div>\n                </div>\n            </fieldset>\n            <h2>Pasillos</h2>\n            <fieldset>\n        \n                <div className='pasillo'>\n                    <p>\n                        <strong>\n                            Importante: En lo referente al pasillo nos interesa\n                            prestar atención al ancho del mismo. Este puede ser\n                            de dos formas misma anchura(anchura libre) a largo\n                            de todo el corredor, o por el contrario, sufrir\n                            algún tipo estrechamiento en ciertos puntos\n                            (entrechamiento puntual). Por favor, según el caso,\n                            marque la casilla para habilitar el resto de campos.\n                        </strong>\n                    </p>{' '}\n                    <div className='ancho'>\n                        <label>\n                            {' '}\n                            <i>\n                                En caso de que la anchura sea la misma a largo\n                                del corredor marque esta casilla...\n                            </i>\n                        </label>\n                        <input type='checkbox' name='anchuraLibre' id='' />\n                        <br></br>\n                        <label>Ancho libre (cm)</label>\n                        <input\n                            type='number'\n                            name='estrechamiento'\n                            value={form.input3}\n                            onChange={(e) =>\n                                setForm((lastValue) => ({\n                                    ...lastValue,\n                                    input3: e.target.value,\n                                }))\n                            }\n                        />\n                    </div>\n                    <div className='estrecho'>\n                        <label>\n                            <i>\n                                En caso de que exista un estrechamiento puntual\n                                marque esta casilla...\n                            </i>\n                        </label>\n                        <input type='checkbox' name='' id='' />\n                        <br></br>\n                        <label>Anchura mínima del estrechamiento (cm)</label>\n                        <input\n                            type='number'\n                            name='estrechamiento'\n                            value={form.input4}\n                            onChange={(e) =>\n                                setForm((lastValue) => ({\n                                    ...lastValue,\n                                    input4: e.target.value,\n                                }))\n                            }\n                        />\n                    </div>\n                    <div className='largo'>\n                        <label>\n                            <i>\n                                En caso de que su pasillo tenga una longitud de\n                                10 metros o más indique por favor su anchura\n                                (cm)\n                            </i>\n                        </label>\n\n                        <input\n                            type='number'\n                            name='estrechamiento'\n                            value={form.input5}\n                            onChange={(e) =>\n                                setForm((lastValue) => ({\n                                    ...lastValue,\n                                    input5: e.target.value,\n                                }))\n                            }\n                        />\n                    </div>\n                </div>\n            </fieldset>\n            <h2>Huecos de paso</h2>\n            \n         \n                <fieldset>\n\n                <div>\n                    <label>\n                        Anchura libre de paso de las puertas de entrada (cm)\n                    </label>\n                    <input\n                        type='number'\n                        name='hueco1'\n                        value={form.input6}\n                        onChange={(e) =>\n                            setForm((lastValue) => ({\n                                ...lastValue,\n                                input6: e.target.value,\n                            }))\n                        }\n                    />\n                </div>\n                <div>\n                    <label>\n                        Espacio libre a ambas caras de las puertas (cm)\n                    </label>\n                    <input\n                        type='number'\n                        name='hueco2'\n                        value={form.input7}\n                        onChange={(e) =>\n                            setForm((lastValue) => ({\n                                ...lastValue,\n                                input7: e.target.value,\n                            }))\n                        }\n                    />\n                </div>\n                </fieldset>\n                <h2>Puertas de accesos interiores</h2>\n\n            \n                <fieldset>\n \n                    <p>\n                        <strong>\n                            Importante : En esta sección deberá tomar medidas de\n                            los espacios cercanos a la puertas que acceden a las\n                            diferentes habitaciones de su hogar\n                        </strong>\n                    </p>{' '}\n                    <div className='hueco'>\n                        {/*                         <p>\n                            <strong>\n                                Importante: En este caso deberá tomar medidas\n                                del espacio libre del area que cubre la puerta\n                                (al abrir y cerrar) de su hogar.\n                            </strong>\n                        </p>{' '} */}\n\n                        <div>\n                            <label>\n                                Marque esta casilla en caso de que las puertas\n                                interiores tengan un ángulo de 90º o superior\n                            </label>\n                            <input\n                                type='checkbox'\n                                name='hueco2'\n                                value={form.input14}\n                                onChange={(e) =>\n                                    setForm((lastValue) => ({\n                                        ...lastValue,\n                                        input14: e.target.value,\n                                    }))\n                                }\n                            />\n                        </div>\n                        <div className='apertura'>\n                            <div>\n                                <label>\n                                    Distancia entre el suelo y el pomo (cm)\n                                </label>\n                                <input\n                                    type='number'\n                                    name='hueco4'\n                                    value={form.input8}\n                                    onChange={(e) =>\n                                        setForm((lastValue) => ({\n                                            ...lastValue,\n                                            input8: e.target.value,\n                                        }))\n                                    }\n                                />\n                            </div>\n                            <div>\n                                <label>\n                                    Separación del picaporte al plano de la\n                                    puerta (cm)\n                                </label>\n                                <input\n                                    type='number'\n                                    name='hueco5'\n                                    value={form.input9}\n                                    onChange={(e) =>\n                                        setForm((lastValue) => ({\n                                            ...lastValue,\n                                            input9: e.target.value,\n                                        }))\n                                    }\n                                />\n                            </div>\n                            <div>\n                                <br></br>\n                                <label>\n                                    <i>\n                                        En caso de puertas\n                                        acristaladas/transaparentes, existe\n                                        señalización sobre las mismas\n                                    </i>\n                                </label>\n\n                                <input\n                                    type='checkbox'\n                                    name='hueco6'\n                                    value={form.input10}\n                                    onChange={(e) =>\n                                        setForm((lastValue) => ({\n                                            ...lastValue,\n                                            input10: e.target.value,\n                                        }))\n                                    }\n                                ></input>\n                                <br></br>\n                                <label>Anchura de la señalización</label>\n                                <input\n                                    type='number'\n                                    name='hueco6'\n                                    value={form.input10}\n                                    onChange={(e) =>\n                                        setForm((lastValue) => ({\n                                            ...lastValue,\n                                            input10: e.target.value,\n                                        }))\n                                    }\n                                />\n                            </div>\n                        </div>\n                        <div>\n                            <div>\n                                <label>\n                                    <i>\n                                        En caso de puertas de doble filo(puerta\n                                        doble) con mecanismo automático (puerta\n                                        automática)de apertura y cierre, marque\n                                        esta casilla\n                                    </i>\n                                </label>\n\n                                <input type='checkbox' name='hueco6'></input>\n                                <br></br>\n                                <label>\n                                    Anchura máxima de paso entre ellas\n                                </label>\n                                <input\n                                    type='number'\n                                    name='hueco6'\n                                    value={form.input11}\n                                    onChange={(e) =>\n                                        setForm((lastValue) => ({\n                                            ...lastValue,\n                                            input11: e.target.value,\n                                        }))\n                                    }\n                                />\n                            </div>\n                        </div>\n                        <div>\n                            <label>\n                                Tiempo estimado para apertura/cierra (segundos)\n                            </label>\n                            <input\n                                type='number'\n                                name='hueco6'\n                                value={form.input12}\n                                onChange={(e) =>\n                                    setForm((lastValue) => ({\n                                        ...lastValue,\n                                        input12: e.target.value,\n                                    }))\n                                }\n                            />\n                        </div>\n                    </div>\n                </fieldset>\n            \n            <h2>Ventanas</h2>\n            <fieldset>\n                <p>\n                    <strong>\n                        Importante: En este campo se hace refrencia a la altura\n                        a la que se encuentran en mecanismo de apertura de las\n                        ventanas de su hogar. Esta medida se toma desde el suelo\n                        hasta la manivela/pomo de la ventana.\n                    </strong>\n                </p>{' '}\n                <div>\n                    <label> Altura de ventanas</label>\n                    <input\n                        type='number'\n                        name='alturaV'\n                        value={form.input13}\n                        onChange={(e) =>\n                            setForm((lastValue) => ({\n                                ...lastValue,\n                                input13: e.target.value,\n                            }))\n                        }\n                    />\n                </div>\n            </fieldset>\n            <div className='submitDiv'>\n                <button\n                    type='submit'\n                    className='submit'\n                    onClick={async () => {\n                        const data = await request(form);\n                        setForm(data);\n                    }}\n                    /*                     onClick={async () => {\n                        alert('su casa se encuentra adaptada en un 20%');\n                    }} */\n                >\n                    Submit\n                </button>\n            </div>\n        </div>\n    );\n}\nexport default Form;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}