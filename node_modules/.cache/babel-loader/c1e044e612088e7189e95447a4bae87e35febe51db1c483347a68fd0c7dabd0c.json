{"ast":null,"code":"\n// import { useState } from 'react';\n// import Modal from \"./Modal\";\n// import FontSizeButton from './FontSizeButton';\n// import { useNavigate } from \"react-router-dom\";\n// import CustomInput from './CustomInput';\n\n// const request = async (data) => { \n//     const rules = {\n//         input1: { min: 150},\n//         input2: { min: 150},\n//         input3: { min: 120},\n//         input4: { min: 100},\n//         input5: { min: 150},\n//         input6: { min: 80},\n//         input7: { min: 120},\n//         input8: { min: 120},\n//         input9: { min: 120},\n//         input10: { min: 5},\n//         input11: { min: 80},\n//         input12: { min: 15},\n//         input13: { min: 80, max: 110},\n//     }\n\n//          const adapted =  Object.keys(data).reduce((acc, key) => {\n//         const { min, max } = rules[key]\n//         const value = data[key]\n//         if (value < min || value > max) {\n//             acc[key] = 'unadapted'\n//         } else {\n//             acc[key] = 'adapted'\n//         }\n//         return acc\n//     }, {})\n\n//     console.log(adapted);\n//     const rate = Object.values(adapted).filter((value) => value === 'adapted')\n//     const result = Math.round((rate.length * 100)/13)\n\n//     if(alert(`Su vivienda se encuentra adaptado en un ${result}%`)){}\n// else    window.location.reload(); \n//   };\n\n// function Form2() {\n//     console.log('FORM2');\n//     const navigate = useNavigate();\n//     const [modalOpen1, setmodalOpen1] = useState(false);\n//     const [modalOpen2, setmodalOpen2] = useState(false);\n//     const [modalOpen3, setmodalOpen3] = useState(false);\n//     const [modalOpen4, setmodalOpen4] = useState(false);\n//     const [modalOpen5, setmodalOpen5] = useState(false);\n//     const [modalOpen6, setmodalOpen6] = useState(false);\n//     const [modalOpen7, setmodalOpen7] = useState(false);\n\n//     const [form, setForm] = useState({\n//         input1: '',\n//         input2: '',\n//         input3: '',\n//         input4: '',\n//         input5: '',\n//         input6: '',\n//         input7: '',\n//         input8: '',\n//         input9: '',\n//         input10: '',\n//         input11: '',\n//         input12: '',\n//         input13: '',\n//     });\n\n//     const handleReset = () => {\n//         setForm ({input1: '',\n//         input2: '',\n//         input3: '',\n//         input4: '',\n//         input5: '',\n//         input6: '',\n//         input7: '',\n//         input8: '',\n//         input9: '',\n//         input10: '',\n//         input11: '',\n//         input12: '',\n//         input13: '',})\n//     }\n\n//     const handleOpenModal1 = () => {\n//         setmodalOpen1(true);\n//       };\n//       const handleOpenModal2 = () => {\n//         setmodalOpen2(true);\n//       };const handleOpenModal3 = () => {\n//         setmodalOpen3(true);\n//       };const handleOpenModal4 = () => {\n//         setmodalOpen4(true);\n//       };const handleOpenModal5 = () => {\n//         setmodalOpen5(true);\n//       };const handleOpenModal6 = () => {\n//         setmodalOpen6(true);\n//       };const handleOpenModal7 = () => {\n//         setmodalOpen7(true);\n//       };\n\n//     return (\n//         <div id='root'>\n//         <div className='document'>\n//                 <header className='Header'>\n//                 <img src={require('./img/vidapp.png')} alt=\"\" />\n//                 </header>\n\n//             {/* <h2>Suelos</h2>\n//             <fieldset>\n//                 <div className='interior'>\n//                     <p>\n//                         <strong>\n//                             Importante : Echemos un vistazo tanto al material\n//                             como a la inclinación del mismo, por favor, marque\n//                             la casilla para habilitar el resto de campos.\n//                         </strong>\n//                     </p>\n//                     <label>\n//                         <i>\n//                             En caso que quiera indicar la información en cuanto\n//                             al suelo interior de su hogar indique el material.\n//                         </i>\n//                     </label>{' '}\n//                     <br></br>\n//                     <label>Material</label>\n//                     <input type='text' name='material'  />\n\n//                 </div>\n//                 <div className='exterior'>\n//                     <label>\n//                         <i>\n//                             Sí se trata del suelo que se encuentra en el exterior de la vivienda indique el material.\n//                         </i>\n//                     </label>\n//                     <br></br>\n//                     <label>Material</label>\n//                     <input type='text' name='material'  />\n\n//                 </div>\n//             </fieldset> */}\n//             <h2>Vestíbulos</h2>\n\n//                 <div className='vestibulo'>\n//                     <div>\n//                         <p>\n//                             <strong>\n//                                 Nota explicativa: El espacio libre deberá ser igual \n//                             </strong>\n//                         </p>\n//                         <label>\n//                             1. Diametro de circunferencia libre no barrida por las\n//                             puertas (cm)\n//                         </label>\n//                         <CustomInput value={form.input1} onChange={(e) =>\n//                                 setForm((lastValue) => ({\n//                                     ...lastValue,\n//                                     input1: e.target.value,\n//                                 }))\n//                             }/>\n//                         <br></br>\n//                         <a onClick={handleOpenModal5}>Click aquí para ver la imagen</a>\n//                     </div>\n//                 </div>\n\n//             <h2>Pasillos</h2>\n\n//                 <div className='pasillo'>\n//                     <p>\n//                         <strong>\n//                             Importante: En lo referente al pasillo nos interesa\n//                             prestar atención al ancho del mismo. Este puede ser\n//                             de dos formas: misma anchura(anchura libre) a largo\n//                             de todo el pasillo, o por el contrario, sufrir\n//                             algún tipo estrechamiento en ciertos puntos\n//                             (entrechamiento puntual). Por favor, según el caso,\n//                             marque la casilla para habilitar el resto de campos.\n//                         </strong>\n//                     </p>\n//                     <div className='preguntas'>\n//                         <label>\n//                             <i>\n//                                 En caso de que la anchura sea la misma a lo largo de todo el pasillo...\n//                             </i>\n//                         </label>\n//                         <br></br>\n//                         <label>2. Ancho libre (cm)</label>\n//                         <input\n//                             type='number'\n//                             name='estrechamiento'\n//                             value={form.input3}\n//                             onChange={(e) =>\n//                                 setForm((lastValue) => ({\n//                                     ...lastValue,\n//                                     input3: e.target.value,\n//                                 }))\n//                             }\n//                         />\n//                     </div>\n//                     <div className='preguntas'>\n//                         <br></br>\n//                         <label>\n//                             <i>\n//                                 En caso de que exista un estrechamiento puntual\n//                                 (como por ejemplo un pilar)\n//                             </i>\n//                         </label>\n//                         <br></br>\n//                         <label>3. Ancho libre (cm)</label>\n//                        <CustomInput value={form.input3}/>\n//                         <br></br>\n//                         <label>4. Anchura del estrechamiento (cm)</label>\n//                         <CustomInput value={form.input4}/>\n//                         <br></br>\n//                           <label>5. Ancho libre en el punto del estrechamiento (cm)</label>\n//                         <input\n//                             type='number'\n//                             name='estrechamiento'\n//                             value={form.input4}\n//                             onChange={(e) =>\n//                                 setForm((lastValue) => ({\n//                                     ...lastValue,\n//                                     input4: e.target.value,\n//                                 }))\n//                             }\n//                         />\n//                     </div>\n//                     <div className='preguntas'>\n//                         <label>\n//                             <i>\n//                                 En caso de que su pasillo tenga una longitud de\n//                                 10 metros o más indique por favor su anchura\n//                                 (cm)\n//                             </i>\n//                         </label>\n//                         <br></br>\n//                         <label>6. Anchura libre</label>    \n//                         <input\n//                             type='number'\n//                             name='estrechamiento'\n//                             value={form.input5}\n//                             onChange={(e) =>\n//                                 setForm((lastValue) => ({\n//                                     ...lastValue,\n//                                     input5: e.target.value,\n//                                 }))\n//                             }\n//                         />\n//                     </div>\n//                 </div>\n\n//             <h2>Huecos de paso</h2>\n\n//                 <div>\n//                     <label>\n//                         7. Anchura libre de paso de la puerta de entrada (cm)\n//                     </label>\n//                     <input\n//                         type='number'\n//                         name='hueco1'\n//                         value={form.input6}\n//                         onChange={(e) =>\n//                             setForm((lastValue) => ({\n//                                 ...lastValue,\n//                                 input6: e.target.value,\n//                             }))\n//                         }\n//                     />\n//                     <br></br>\n//                     <a onClick={handleOpenModal4}>Click aquí para ver la imagen</a>\n\n//                 </div>\n//                 <div>\n//                     <label>\n//                         8. Diámetro libre a ambos lados de la puerta de entrada a la vivienda (cm)\n//                     </label>\n//                     <input\n//                         type='number'\n//                         name='hueco2'\n//                         value={form.input7}\n//                         onChange={(e) =>\n//                             setForm((lastValue) => ({\n//                                 ...lastValue,\n//                                 input7: e.target.value,\n//                             }))\n//                         }\n//                     />\n//                      <br></br>\n//                     <a onClick={handleOpenModal6}>Click aquí para ver la imagen</a>\n//                 </div>\n\n//                 <h2>Puertas de accesos interiores</h2>\n\n//                     <p>\n//                         <strong>\n//                             Importante : En esta sección deberá tomar medidas de\n//                             los espacios cercanos a la puertas que acceden a las\n//                             diferentes habitaciones de su hogar\n//                         </strong>\n//                     </p>\n//                     <div className='preguntas'>\n//                         {/*                         <p>\n//                             <strong>\n//                                 Importante: En este caso deberá tomar medidas\n//                                 del espacio libre del area que cubre la puerta\n//                                 (al abrir y cerrar) de su hogar.\n//                             </strong>\n//                         </p>{' '} */}\n\n//                         <div>\n//                             <label>\n//                                 9. Marque esta casilla en caso de que las puertas\n//                                 interiores tengan un ángulo de 90º o superior\n//                             </label>\n//                             <input\n//                                 type='checkbox'\n//                                 name='hueco2'\n//                                 value={form.input14}\n//                                 onChange={(e) =>\n//                                     setForm((lastValue) => ({\n//                                         ...lastValue,\n//                                         input14: e.target.value,\n//                                     }))\n//                                 }\n//                             />\n//                         </div>\n//                         <div className='preguntas'>\n//                             <div>\n//                                 <label>\n//                                     10. Distancia entre el suelo y el pomo (cm)\n//                                 </label>\n//                                 <input\n//                                     type='number'\n//                                     name='hueco4'\n//                                     value={form.input8}\n//                                     onChange={(e) =>\n//                                         setForm((lastValue) => ({\n//                                             ...lastValue,\n//                                             input8: e.target.value,\n//                                         }))\n//                                     }\n//                                 />\n//                             </div>\n\n//                             <div className='preguntas'>\n//                                 <br></br>\n//                                 <label>\n//                                     <i>\n//                                         En caso de puertas\n//                                         acristaladas/transaparentes, exista\n//                                         señalización sobre las mismas\n//                                     </i>\n//                                 </label>\n\n//                                 {/* <input\n//                                     type='checkbox'\n//                                     name='hueco6'\n//                                    value={form.input10}\n//                                     onChange={(e) =>\n//                                         setForm((lastValue) => ({\n//                                             ...lastValue,\n//                                             input10: e.target.value,\n//                                         }))\n//                                     }\n//                                 ></input> */}\n//                                 <br></br>\n//                                 <label>11. Anchura de la señalización</label>\n//                                 <input\n//                                     type='number'\n//                                     name='hueco6'\n//                                     value={form.input10}\n//                                     onChange={(e) =>\n//                                         setForm((lastValue) => ({\n//                                             ...lastValue,\n//                                             input10: e.target.value,\n//                                         }))\n//                                     }\n//                                 />\n//                             </div>\n//                         </div>\n//                         <div className='preguntas'>\n//                             <div>\n//                                 <label>\n//                                     <i>\n//                                         En caso de puertas de doble filo(puerta\n//                                         doble) con mecanismo automático (puerta\n//                                         automática)de apertura y cierre, marque\n//                                         esta casilla\n//                                     </i>\n//                                 </label>\n//                                 <br></br>\n//                                 <label>\n//                                    12. Anchura libre de paso \n//                                 </label>\n//                                 <input\n//                                     type='number'\n//                                     name='hueco6'\n//                                     value={form.input11}\n//                                     onChange={(e) =>\n//                                         setForm((lastValue) => ({\n//                                             ...lastValue,\n//                                             input11: e.target.value,\n//                                         }))\n//                                     }\n//                                 />\n//                             </div>\n//                         </div>\n//                         <div>\n//                             <label>\n//                                 13. Tiempo estimado para apertura/cierra (segundos)\n//                             </label>\n//                             <input\n//                                 type='number'\n//                                 name='hueco6'\n//                                 value={form.input12}\n//                                 onChange={(e) =>\n//                                     setForm((lastValue) => ({\n//                                         ...lastValue,\n//                                         input12: e.target.value,\n//                                     }))\n//                                 }\n//                             />\n//                         </div>\n//                     </div>\n\n//             <h2>Ventanas</h2>\n\n//                 <p>\n//                     <strong>\n//                         Importante: En este campo se hace refrencia a la altura\n//                         a la que se encuentran en mecanismo de apertura de las\n//                         ventanas de su hogar. Esta medida se toma desde el suelo\n//                         hasta la manivela/pomo de la ventana.\n//                     </strong>\n//                 </p>\n//                 <div>\n//                     <label>14. Altura del mecanismo de apertura</label>\n//                     <input\n//                         type='number'\n//                         name='alturaV'\n//                         value={form.input13}\n//                         onChange={(e) =>\n//                             setForm((lastValue) => ({\n//                                 ...lastValue,\n//                                 input13: e.target.value,\n//                             }))\n//                         }\n//                     />\n//                      <br></br>\n//                     <a onClick={handleOpenModal2}>Click aquí para ver la imagen</a>                    \n//                 </div>\n\n//             <div className='submitDiv'>\n//                 <button\n//                     type='submit'\n//                     className='submit'\n//                     onClick={async () => {\n//                         const data = await request(form);\n//                         setForm(data);\n//                     }}\n//                 >\n//                     Calcular\n//                 </button>\n//             </div>\n//             <div className='resettDiv'>\n//                 <button\n//                     type='submit'\n//                     className='submit'\n//                     onClick={handleReset}\n//                 >\n//                     Reset\n//                 </button>\n//             </div>\n//             <div>\n//             <a><img onClick={() => navigate(\"/\") } className=\"home\" src={require('./img/iconos/hogar.png')} alt=\"\" /></a>\n//             </div>\n\n//             <FontSizeButton/>\n\n//         </div>\n//         <Modal estado={modalOpen1} setEstado={setmodalOpen1}>\n//             <img className=\"modalImg\" src={require('./img/alturaPomo.jpg')} alt=\"\" />\n//         </Modal>\n//         <Modal estado={modalOpen2} setEstado={setmodalOpen2}>\n//             <img className=\"modalImg\" src={require('./img/formulario/personal/alturaVentana.jpg')} alt=\"\" />\n//         </Modal>   \n//         <Modal estado={modalOpen3} setEstado={setmodalOpen3}>\n//             <img className=\"modalImg\" src={require('./img/formulario/personal/anchoPaso.jpg')} alt=\"\" />\n//         </Modal>   \n//         <Modal estado={modalOpen4} setEstado={setmodalOpen4}>\n//             <img className=\"modalImg\" src={require('./img/formulario/personal/anchura.jpg')} alt=\"\" />\n//         </Modal>   \n//         <Modal estado={modalOpen5} setEstado={setmodalOpen5}>\n//             <img className=\"modalImg\" src={require('./img/formulario/personal/diametroLibre.jpg')} alt=\"\" />\n//         </Modal>\n//         <Modal estado={modalOpen6} setEstado={setmodalOpen6}>\n//             <img className=\"modalImg\" src={require('./img/formulario/personal/diametroLibre(ambos).jpg')} alt=\"\" />\n//         </Modal>\n//         <Modal estado={modalOpen7} setEstado={setmodalOpen7}>\n//             <img className=\"modalImg\" src={require('./img/formulario/personal/pasilloEstrechamiento.jpg')} alt=\"\" />\n//         </Modal>\n\n//     </div>\n//     );\n// }\n// export default Form2;","map":{"version":3,"names":[],"sources":["/Users/pablorobredo/Desktop/WORK/Demo/DemoApp/src/Form2.js"],"sourcesContent":["\n// import { useState } from 'react';\n// import Modal from \"./Modal\";\n// import FontSizeButton from './FontSizeButton';\n// import { useNavigate } from \"react-router-dom\";\n// import CustomInput from './CustomInput';\n\n// const request = async (data) => { \n//     const rules = {\n//         input1: { min: 150},\n//         input2: { min: 150},\n//         input3: { min: 120},\n//         input4: { min: 100},\n//         input5: { min: 150},\n//         input6: { min: 80},\n//         input7: { min: 120},\n//         input8: { min: 120},\n//         input9: { min: 120},\n//         input10: { min: 5},\n//         input11: { min: 80},\n//         input12: { min: 15},\n//         input13: { min: 80, max: 110},\n//     }\n    \n    \n//          const adapted =  Object.keys(data).reduce((acc, key) => {\n//         const { min, max } = rules[key]\n//         const value = data[key]\n//         if (value < min || value > max) {\n//             acc[key] = 'unadapted'\n//         } else {\n//             acc[key] = 'adapted'\n//         }\n//         return acc\n//     }, {})\n    \n//     console.log(adapted);\n//     const rate = Object.values(adapted).filter((value) => value === 'adapted')\n//     const result = Math.round((rate.length * 100)/13)\n    \n//     if(alert(`Su vivienda se encuentra adaptado en un ${result}%`)){}\n// else    window.location.reload(); \n//   };\n\n// function Form2() {\n//     console.log('FORM2');\n//     const navigate = useNavigate();\n//     const [modalOpen1, setmodalOpen1] = useState(false);\n//     const [modalOpen2, setmodalOpen2] = useState(false);\n//     const [modalOpen3, setmodalOpen3] = useState(false);\n//     const [modalOpen4, setmodalOpen4] = useState(false);\n//     const [modalOpen5, setmodalOpen5] = useState(false);\n//     const [modalOpen6, setmodalOpen6] = useState(false);\n//     const [modalOpen7, setmodalOpen7] = useState(false);\n    \n//     const [form, setForm] = useState({\n//         input1: '',\n//         input2: '',\n//         input3: '',\n//         input4: '',\n//         input5: '',\n//         input6: '',\n//         input7: '',\n//         input8: '',\n//         input9: '',\n//         input10: '',\n//         input11: '',\n//         input12: '',\n//         input13: '',\n//     });\n\n//     const handleReset = () => {\n//         setForm ({input1: '',\n//         input2: '',\n//         input3: '',\n//         input4: '',\n//         input5: '',\n//         input6: '',\n//         input7: '',\n//         input8: '',\n//         input9: '',\n//         input10: '',\n//         input11: '',\n//         input12: '',\n//         input13: '',})\n//     }\n\n//     const handleOpenModal1 = () => {\n//         setmodalOpen1(true);\n//       };\n//       const handleOpenModal2 = () => {\n//         setmodalOpen2(true);\n//       };const handleOpenModal3 = () => {\n//         setmodalOpen3(true);\n//       };const handleOpenModal4 = () => {\n//         setmodalOpen4(true);\n//       };const handleOpenModal5 = () => {\n//         setmodalOpen5(true);\n//       };const handleOpenModal6 = () => {\n//         setmodalOpen6(true);\n//       };const handleOpenModal7 = () => {\n//         setmodalOpen7(true);\n//       };\n      \n      \n      \n//     return (\n//         <div id='root'>\n//         <div className='document'>\n//                 <header className='Header'>\n//                 <img src={require('./img/vidapp.png')} alt=\"\" />\n//                 </header>\n            \n//             {/* <h2>Suelos</h2>\n//             <fieldset>\n//                 <div className='interior'>\n//                     <p>\n//                         <strong>\n//                             Importante : Echemos un vistazo tanto al material\n//                             como a la inclinación del mismo, por favor, marque\n//                             la casilla para habilitar el resto de campos.\n//                         </strong>\n//                     </p>\n//                     <label>\n//                         <i>\n//                             En caso que quiera indicar la información en cuanto\n//                             al suelo interior de su hogar indique el material.\n//                         </i>\n//                     </label>{' '}\n//                     <br></br>\n//                     <label>Material</label>\n//                     <input type='text' name='material'  />\n                    \n//                 </div>\n//                 <div className='exterior'>\n//                     <label>\n//                         <i>\n//                             Sí se trata del suelo que se encuentra en el exterior de la vivienda indique el material.\n//                         </i>\n//                     </label>\n//                     <br></br>\n//                     <label>Material</label>\n//                     <input type='text' name='material'  />\n                    \n//                 </div>\n//             </fieldset> */}\n//             <h2>Vestíbulos</h2>\n            \n//                 <div className='vestibulo'>\n//                     <div>\n//                         <p>\n//                             <strong>\n//                                 Nota explicativa: El espacio libre deberá ser igual \n//                             </strong>\n//                         </p>\n//                         <label>\n//                             1. Diametro de circunferencia libre no barrida por las\n//                             puertas (cm)\n//                         </label>\n//                         <CustomInput value={form.input1} onChange={(e) =>\n//                                 setForm((lastValue) => ({\n//                                     ...lastValue,\n//                                     input1: e.target.value,\n//                                 }))\n//                             }/>\n//                         <br></br>\n//                         <a onClick={handleOpenModal5}>Click aquí para ver la imagen</a>\n//                     </div>\n//                 </div>\n            \n            \n//             <h2>Pasillos</h2>\n            \n        \n//                 <div className='pasillo'>\n//                     <p>\n//                         <strong>\n//                             Importante: En lo referente al pasillo nos interesa\n//                             prestar atención al ancho del mismo. Este puede ser\n//                             de dos formas: misma anchura(anchura libre) a largo\n//                             de todo el pasillo, o por el contrario, sufrir\n//                             algún tipo estrechamiento en ciertos puntos\n//                             (entrechamiento puntual). Por favor, según el caso,\n//                             marque la casilla para habilitar el resto de campos.\n//                         </strong>\n//                     </p>\n//                     <div className='preguntas'>\n//                         <label>\n//                             <i>\n//                                 En caso de que la anchura sea la misma a lo largo de todo el pasillo...\n//                             </i>\n//                         </label>\n//                         <br></br>\n//                         <label>2. Ancho libre (cm)</label>\n//                         <input\n//                             type='number'\n//                             name='estrechamiento'\n//                             value={form.input3}\n//                             onChange={(e) =>\n//                                 setForm((lastValue) => ({\n//                                     ...lastValue,\n//                                     input3: e.target.value,\n//                                 }))\n//                             }\n//                         />\n//                     </div>\n//                     <div className='preguntas'>\n//                         <br></br>\n//                         <label>\n//                             <i>\n//                                 En caso de que exista un estrechamiento puntual\n//                                 (como por ejemplo un pilar)\n//                             </i>\n//                         </label>\n//                         <br></br>\n//                         <label>3. Ancho libre (cm)</label>\n//                        <CustomInput value={form.input3}/>\n//                         <br></br>\n//                         <label>4. Anchura del estrechamiento (cm)</label>\n//                         <CustomInput value={form.input4}/>\n//                         <br></br>\n//                           <label>5. Ancho libre en el punto del estrechamiento (cm)</label>\n//                         <input\n//                             type='number'\n//                             name='estrechamiento'\n//                             value={form.input4}\n//                             onChange={(e) =>\n//                                 setForm((lastValue) => ({\n//                                     ...lastValue,\n//                                     input4: e.target.value,\n//                                 }))\n//                             }\n//                         />\n//                     </div>\n//                     <div className='preguntas'>\n//                         <label>\n//                             <i>\n//                                 En caso de que su pasillo tenga una longitud de\n//                                 10 metros o más indique por favor su anchura\n//                                 (cm)\n//                             </i>\n//                         </label>\n//                         <br></br>\n//                         <label>6. Anchura libre</label>    \n//                         <input\n//                             type='number'\n//                             name='estrechamiento'\n//                             value={form.input5}\n//                             onChange={(e) =>\n//                                 setForm((lastValue) => ({\n//                                     ...lastValue,\n//                                     input5: e.target.value,\n//                                 }))\n//                             }\n//                         />\n//                     </div>\n//                 </div>\n            \n//             <h2>Huecos de paso</h2>\n            \n         \n                \n\n//                 <div>\n//                     <label>\n//                         7. Anchura libre de paso de la puerta de entrada (cm)\n//                     </label>\n//                     <input\n//                         type='number'\n//                         name='hueco1'\n//                         value={form.input6}\n//                         onChange={(e) =>\n//                             setForm((lastValue) => ({\n//                                 ...lastValue,\n//                                 input6: e.target.value,\n//                             }))\n//                         }\n//                     />\n//                     <br></br>\n//                     <a onClick={handleOpenModal4}>Click aquí para ver la imagen</a>\n\n//                 </div>\n//                 <div>\n//                     <label>\n//                         8. Diámetro libre a ambos lados de la puerta de entrada a la vivienda (cm)\n//                     </label>\n//                     <input\n//                         type='number'\n//                         name='hueco2'\n//                         value={form.input7}\n//                         onChange={(e) =>\n//                             setForm((lastValue) => ({\n//                                 ...lastValue,\n//                                 input7: e.target.value,\n//                             }))\n//                         }\n//                     />\n//                      <br></br>\n//                     <a onClick={handleOpenModal6}>Click aquí para ver la imagen</a>\n//                 </div>\n                \n//                 <h2>Puertas de accesos interiores</h2>\n\n            \n                \n \n//                     <p>\n//                         <strong>\n//                             Importante : En esta sección deberá tomar medidas de\n//                             los espacios cercanos a la puertas que acceden a las\n//                             diferentes habitaciones de su hogar\n//                         </strong>\n//                     </p>\n//                     <div className='preguntas'>\n//                         {/*                         <p>\n//                             <strong>\n//                                 Importante: En este caso deberá tomar medidas\n//                                 del espacio libre del area que cubre la puerta\n//                                 (al abrir y cerrar) de su hogar.\n//                             </strong>\n//                         </p>{' '} */}\n\n//                         <div>\n//                             <label>\n//                                 9. Marque esta casilla en caso de que las puertas\n//                                 interiores tengan un ángulo de 90º o superior\n//                             </label>\n//                             <input\n//                                 type='checkbox'\n//                                 name='hueco2'\n//                                 value={form.input14}\n//                                 onChange={(e) =>\n//                                     setForm((lastValue) => ({\n//                                         ...lastValue,\n//                                         input14: e.target.value,\n//                                     }))\n//                                 }\n//                             />\n//                         </div>\n//                         <div className='preguntas'>\n//                             <div>\n//                                 <label>\n//                                     10. Distancia entre el suelo y el pomo (cm)\n//                                 </label>\n//                                 <input\n//                                     type='number'\n//                                     name='hueco4'\n//                                     value={form.input8}\n//                                     onChange={(e) =>\n//                                         setForm((lastValue) => ({\n//                                             ...lastValue,\n//                                             input8: e.target.value,\n//                                         }))\n//                                     }\n//                                 />\n//                             </div>\n                            \n//                             <div className='preguntas'>\n//                                 <br></br>\n//                                 <label>\n//                                     <i>\n//                                         En caso de puertas\n//                                         acristaladas/transaparentes, exista\n//                                         señalización sobre las mismas\n//                                     </i>\n//                                 </label>\n\n//                                 {/* <input\n//                                     type='checkbox'\n//                                     name='hueco6'\n//                                    value={form.input10}\n//                                     onChange={(e) =>\n//                                         setForm((lastValue) => ({\n//                                             ...lastValue,\n//                                             input10: e.target.value,\n//                                         }))\n//                                     }\n//                                 ></input> */}\n//                                 <br></br>\n//                                 <label>11. Anchura de la señalización</label>\n//                                 <input\n//                                     type='number'\n//                                     name='hueco6'\n//                                     value={form.input10}\n//                                     onChange={(e) =>\n//                                         setForm((lastValue) => ({\n//                                             ...lastValue,\n//                                             input10: e.target.value,\n//                                         }))\n//                                     }\n//                                 />\n//                             </div>\n//                         </div>\n//                         <div className='preguntas'>\n//                             <div>\n//                                 <label>\n//                                     <i>\n//                                         En caso de puertas de doble filo(puerta\n//                                         doble) con mecanismo automático (puerta\n//                                         automática)de apertura y cierre, marque\n//                                         esta casilla\n//                                     </i>\n//                                 </label>\n//                                 <br></br>\n//                                 <label>\n//                                    12. Anchura libre de paso \n//                                 </label>\n//                                 <input\n//                                     type='number'\n//                                     name='hueco6'\n//                                     value={form.input11}\n//                                     onChange={(e) =>\n//                                         setForm((lastValue) => ({\n//                                             ...lastValue,\n//                                             input11: e.target.value,\n//                                         }))\n//                                     }\n//                                 />\n//                             </div>\n//                         </div>\n//                         <div>\n//                             <label>\n//                                 13. Tiempo estimado para apertura/cierra (segundos)\n//                             </label>\n//                             <input\n//                                 type='number'\n//                                 name='hueco6'\n//                                 value={form.input12}\n//                                 onChange={(e) =>\n//                                     setForm((lastValue) => ({\n//                                         ...lastValue,\n//                                         input12: e.target.value,\n//                                     }))\n//                                 }\n//                             />\n//                         </div>\n//                     </div>\n                \n            \n//             <h2>Ventanas</h2>\n            \n//                 <p>\n//                     <strong>\n//                         Importante: En este campo se hace refrencia a la altura\n//                         a la que se encuentran en mecanismo de apertura de las\n//                         ventanas de su hogar. Esta medida se toma desde el suelo\n//                         hasta la manivela/pomo de la ventana.\n//                     </strong>\n//                 </p>\n//                 <div>\n//                     <label>14. Altura del mecanismo de apertura</label>\n//                     <input\n//                         type='number'\n//                         name='alturaV'\n//                         value={form.input13}\n//                         onChange={(e) =>\n//                             setForm((lastValue) => ({\n//                                 ...lastValue,\n//                                 input13: e.target.value,\n//                             }))\n//                         }\n//                     />\n//                      <br></br>\n//                     <a onClick={handleOpenModal2}>Click aquí para ver la imagen</a>                    \n//                 </div>\n            \n//             <div className='submitDiv'>\n//                 <button\n//                     type='submit'\n//                     className='submit'\n//                     onClick={async () => {\n//                         const data = await request(form);\n//                         setForm(data);\n//                     }}\n//                 >\n//                     Calcular\n//                 </button>\n//             </div>\n//             <div className='resettDiv'>\n//                 <button\n//                     type='submit'\n//                     className='submit'\n//                     onClick={handleReset}\n//                 >\n//                     Reset\n//                 </button>\n//             </div>\n//             <div>\n//             <a><img onClick={() => navigate(\"/\") } className=\"home\" src={require('./img/iconos/hogar.png')} alt=\"\" /></a>\n//             </div>\n\n//             <FontSizeButton/>\n\n//         </div>\n//         <Modal estado={modalOpen1} setEstado={setmodalOpen1}>\n//             <img className=\"modalImg\" src={require('./img/alturaPomo.jpg')} alt=\"\" />\n//         </Modal>\n//         <Modal estado={modalOpen2} setEstado={setmodalOpen2}>\n//             <img className=\"modalImg\" src={require('./img/formulario/personal/alturaVentana.jpg')} alt=\"\" />\n//         </Modal>   \n//         <Modal estado={modalOpen3} setEstado={setmodalOpen3}>\n//             <img className=\"modalImg\" src={require('./img/formulario/personal/anchoPaso.jpg')} alt=\"\" />\n//         </Modal>   \n//         <Modal estado={modalOpen4} setEstado={setmodalOpen4}>\n//             <img className=\"modalImg\" src={require('./img/formulario/personal/anchura.jpg')} alt=\"\" />\n//         </Modal>   \n//         <Modal estado={modalOpen5} setEstado={setmodalOpen5}>\n//             <img className=\"modalImg\" src={require('./img/formulario/personal/diametroLibre.jpg')} alt=\"\" />\n//         </Modal>\n//         <Modal estado={modalOpen6} setEstado={setmodalOpen6}>\n//             <img className=\"modalImg\" src={require('./img/formulario/personal/diametroLibre(ambos).jpg')} alt=\"\" />\n//         </Modal>\n//         <Modal estado={modalOpen7} setEstado={setmodalOpen7}>\n//             <img className=\"modalImg\" src={require('./img/formulario/personal/pasilloEstrechamiento.jpg')} alt=\"\" />\n//         </Modal>\n                      \n//     </div>\n//     );\n// }\n// export default Form2;\n"],"mappings":";AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}