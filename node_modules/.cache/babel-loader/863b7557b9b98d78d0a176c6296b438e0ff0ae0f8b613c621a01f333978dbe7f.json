{"ast":null,"code":"var _jsxFileName = \"/Users/pablorobredo/Desktop/WORK/Demo/DemoApp/src/Form.js\",\n  _s = $RefreshSig$();\nimport './Form.css';\nimport { useState } from 'react';\n// import Modal from './Modal';\n\n// function OpenModal(){\n//     const [active, setActive] = useState(false);\n\n//      const toggle = () => {\n//         setActive(!active)\n//      }\n//      return (\n//         <div className='img'>\n//             <button onClick={toggle}>Imagen</button>\n//             <Modal active={active} toggle={toggle}>\n//                 {/* <img src=\"./img/q1.png\" alt='diametro'></img> */}\n//                 <h1>Hola</h1>\n//             </Modal>\n//         </div>\n//      )\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst request = async data => {\n  const rules = {\n    input1: {\n      min: 150\n    },\n    input2: {\n      min: 150\n    },\n    input3: {\n      min: 120\n    },\n    input4: {\n      min: 100\n    },\n    input5: {\n      min: 150\n    },\n    input6: {\n      min: 80\n    },\n    input7: {\n      min: 120\n    },\n    input8: {\n      min: 120\n    },\n    input9: {\n      min: 120\n    },\n    input10: {\n      min: 5\n    },\n    input11: {\n      min: 80\n    },\n    input12: {\n      min: 15\n    },\n    input13: {\n      min: 80,\n      max: 110\n    }\n  };\n  const adapted = Object.keys(data).reduce((acc, key) => {\n    const {\n      min,\n      max\n    } = rules[key];\n    const value = data[key];\n    if (value < min || value > max) {\n      acc[key] = 'unadapted';\n    } else {\n      acc[key] = 'adapted';\n    }\n    return acc;\n  }, {});\n  console.log(adapted);\n  const rate = Object.values(adapted).filter(value => value === 'adapted');\n  const result = Math.round(rate.length * 100 / 13);\n  if (alert(`Su vivienda se encuentra adaptado en un ${result}%`)) {} else window.location.reload();\n};\nfunction Form() {\n  _s();\n  const [form, setForm] = useState({\n    input1: '',\n    input2: '',\n    input3: '',\n    input4: '',\n    input5: '',\n    input6: '',\n    input7: '',\n    input8: '',\n    input9: '',\n    input10: '',\n    input11: '',\n    input12: '',\n    input13: ''\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"root\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"document\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"Header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: require('./img/vidapp.png'),\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\xAE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 65\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Vest\\xEDbulos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vestibulo\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Nota explicativa: El espacio libre deber\\xE1 ser igual\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"1. Diametro de circunferencia libre no barrida por las puertas (cm)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"vestibulo2\",\n              value: form.input1,\n              onChange: e => setForm(lastValue => ({\n                ...lastValue,\n                input1: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Pasillos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pasillo\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Importante: En lo referente al pasillo nos interesa prestar atenci\\xF3n al ancho del mismo. Este puede ser de dos formas: misma anchura(anchura libre) a largo de todo el pasillo, o por el contrario, sufrir alg\\xFAn tipo estrechamiento en ciertos puntos (entrechamiento puntual). Por favor, seg\\xFAn el caso, marque la casilla para habilitar el resto de campos.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preguntas\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                children: \"En caso de que la anchura sea la misma a lo largo de todo el pasillo...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"2. Ancho libre (cm)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"estrechamiento\",\n              value: form.input3,\n              onChange: e => setForm(lastValue => ({\n                ...lastValue,\n                input3: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preguntas\",\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                children: \"En caso de que exista un estrechamiento puntual (como por ejemplo un pilar)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"3. Ancho libre (cm)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"estrechamiento\",\n              value: form.input3,\n              onChange: e => setForm(lastValue => ({\n                ...lastValue,\n                input3: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"4. Anchura del estrechamiento (cm)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"estrechamiento\",\n              value: form.input4,\n              onChange: e => setForm(lastValue => ({\n                ...lastValue,\n                input4: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"5. Ancho libre en el punto del estrechamiento (cm)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"estrechamiento\",\n              value: form.input4,\n              onChange: e => setForm(lastValue => ({\n                ...lastValue,\n                input4: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preguntas\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                children: \"En caso de que su pasillo tenga una longitud de 10 metros o m\\xE1s indique por favor su anchura (cm)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"6. Anchura libre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"estrechamiento\",\n              value: form.input5,\n              onChange: e => setForm(lastValue => ({\n                ...lastValue,\n                input5: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Huecos de paso\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"7. Anchura libre de paso de la puerta de entrada (cm)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"img\",\n            href: \"./\",\n            children: \"Imagen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"hueco1\",\n            value: form.input6,\n            onChange: e => setForm(lastValue => ({\n              ...lastValue,\n              input6: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"8. Di\\xE1metro libre a ambos lados de la puerta de entrada a la vivienda (cm)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"img\",\n            href: \"/\",\n            children: \"Imagen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"hueco2\",\n            value: form.input7,\n            onChange: e => setForm(lastValue => ({\n              ...lastValue,\n              input7: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Puertas de accesos interiores\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Importante : En esta secci\\xF3n deber\\xE1 tomar medidas de los espacios cercanos a la puertas que acceden a las diferentes habitaciones de su hogar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"preguntas\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"9. Marque esta casilla en caso de que las puertas interiores tengan un \\xE1ngulo de 90\\xBA o superior\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"hueco2\",\n              value: form.input14,\n              onChange: e => setForm(lastValue => ({\n                ...lastValue,\n                input14: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preguntas\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"10. Distancia entre el suelo y el pomo (cm)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                name: \"hueco4\",\n                value: form.input8,\n                onChange: e => setForm(lastValue => ({\n                  ...lastValue,\n                  input8: e.target.value\n                }))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preguntas\",\n              children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  children: \"En caso de puertas acristaladas/transaparentes, exista se\\xF1alizaci\\xF3n sobre las mismas\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"11. Anchura de la se\\xF1alizaci\\xF3n\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                name: \"hueco6\",\n                value: form.input10,\n                onChange: e => setForm(lastValue => ({\n                  ...lastValue,\n                  input10: e.target.value\n                }))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preguntas\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  children: \"En caso de puertas de doble filo(puerta doble) con mecanismo autom\\xE1tico (puerta autom\\xE1tica)de apertura y cierre, marque esta casilla\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 393,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"12. Anchura libre de paso\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                name: \"hueco6\",\n                value: form.input11,\n                onChange: e => setForm(lastValue => ({\n                  ...lastValue,\n                  input11: e.target.value\n                }))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"13. Tiempo estimado para apertura/cierra (segundos)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"hueco6\",\n              value: form.input12,\n              onChange: e => setForm(lastValue => ({\n                ...lastValue,\n                input12: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Ventanas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Importante: En este campo se hace refrencia a la altura a la que se encuentran en mecanismo de apertura de las ventanas de su hogar. Esta medida se toma desde el suelo hasta la manivela/pomo de la ventana.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"14. Altura del mecanismo de apertura\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"img\",\n            href: \"./\",\n            children: \"Imagen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"alturaV\",\n            value: form.input13,\n            onChange: e => setForm(lastValue => ({\n              ...lastValue,\n              input13: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submitDiv\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit\",\n          onClick: async () => {\n            const data = await request(form);\n            setForm(data);\n          }\n          /*                     onClick={async () => {\n              alert('su casa se encuentra adaptada en un 20%');\n          }} */,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(Form, \"0GxC85u6m9NddIneB3myhr9/cwk=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useState","request","data","rules","input1","min","input2","input3","input4","input5","input6","input7","input8","input9","input10","input11","input12","input13","max","adapted","Object","keys","reduce","acc","key","value","console","log","rate","values","filter","result","Math","round","length","alert","window","location","reload","Form","form","setForm","require","e","lastValue","target","input14"],"sources":["/Users/pablorobredo/Desktop/WORK/Demo/DemoApp/src/Form.js"],"sourcesContent":["import './Form.css';\nimport { useState } from 'react';\n// import Modal from './Modal';\n\n\n// function OpenModal(){\n//     const [active, setActive] = useState(false);\n    \n//      const toggle = () => {\n//         setActive(!active)\n//      }\n//      return (\n//         <div className='img'>\n//             <button onClick={toggle}>Imagen</button>\n//             <Modal active={active} toggle={toggle}>\n//                 {/* <img src=\"./img/q1.png\" alt='diametro'></img> */}\n//                 <h1>Hola</h1>\n//             </Modal>\n//         </div>\n//      )\n// }\n\nconst request = async (data) => { \n    const rules = {\n        input1: { min: 150},\n        input2: { min: 150},\n        input3: { min: 120},\n        input4: { min: 100},\n        input5: { min: 150},\n        input6: { min: 80},\n        input7: { min: 120},\n        input8: { min: 120},\n        input9: { min: 120},\n        input10: { min: 5},\n        input11: { min: 80},\n        input12: { min: 15},\n        input13: { min: 80, max: 110},\n    }\n    \n    \n         const adapted =  Object.keys(data).reduce((acc, key) => {\n        const { min, max } = rules[key]\n        const value = data[key]\n        if (value < min || value > max) {\n            acc[key] = 'unadapted'\n        } else {\n            acc[key] = 'adapted'\n        }\n        return acc\n    }, {})\n    \n    console.log(adapted);\n    const rate = Object.values(adapted).filter((value) => value === 'adapted')\n    const result = Math.round((rate.length * 100)/13)\n    \n    if(alert(`Su vivienda se encuentra adaptado en un ${result}%`)){}\nelse    window.location.reload(); \n  \n  \n\n};\n\nfunction Form() {\n    const [form, setForm] = useState({\n        input1: '',\n        input2: '',\n        input3: '',\n        input4: '',\n        input5: '',\n        input6: '',\n        input7: '',\n        input8: '',\n        input9: '',\n        input10: '',\n        input11: '',\n        input12: '',\n        input13: '',\n    });\n    return (\n    <div id='root'>\n        <div className='document'>\n                <header className='Header'>\n                <img src={require('./img/vidapp.png')} alt=\"\" /><span>®</span>\n                    \n                </header>\n            \n            {/* <h2>Suelos</h2>\n            <fieldset>\n                <div className='interior'>\n                    <p>\n                        <strong>\n                            Importante : Echemos un vistazo tanto al material\n                            como a la inclinación del mismo, por favor, marque\n                            la casilla para habilitar el resto de campos.\n                        </strong>\n                    </p>\n                    <label>\n                        <i>\n                            En caso que quiera indicar la información en cuanto\n                            al suelo interior de su hogar indique el material.\n                        </i>\n                    </label>{' '}\n                    <br></br>\n                    <label>Material</label>\n                    <input type='text' name='material'  />\n                    \n                </div>\n                <div className='exterior'>\n                    <label>\n                        <i>\n                            Sí se trata del suelo que se encuentra en el exterior de la vivienda indique el material.\n                        </i>\n                    </label>\n                    <br></br>\n                    <label>Material</label>\n                    <input type='text' name='material'  />\n                    \n                </div>\n            </fieldset> */}\n            <h2>Vestíbulos</h2>\n            <fieldset>\n                <div className='vestibulo'>\n                    <div>\n                        <p>\n                            <strong>\n                                Nota explicativa: El espacio libre deberá ser igual \n                            </strong>\n                        </p>\n                        <label>\n                            1. Diametro de circunferencia libre no barrida por las\n                            puertas (cm)\n                        </label>\n                        <br></br>\n                        <input\n                            type='number'\n                            name='vestibulo2'\n                            value={form.input1}\n                            onChange={(e) =>\n                                setForm((lastValue) => ({\n                                    ...lastValue,\n                                    input1: e.target.value,\n                                }))\n                            }\n                        />\n                    </div>\n                    \n                </div>\n            </fieldset>\n            \n            <h2>Pasillos</h2>\n            <fieldset>\n        \n                <div className='pasillo'>\n                    <p>\n                        <strong>\n                            Importante: En lo referente al pasillo nos interesa\n                            prestar atención al ancho del mismo. Este puede ser\n                            de dos formas: misma anchura(anchura libre) a largo\n                            de todo el pasillo, o por el contrario, sufrir\n                            algún tipo estrechamiento en ciertos puntos\n                            (entrechamiento puntual). Por favor, según el caso,\n                            marque la casilla para habilitar el resto de campos.\n                        </strong>\n                    </p>\n                    <div className='preguntas'>\n                        <label>\n                            <i>\n                                En caso de que la anchura sea la misma a lo largo de todo el pasillo...\n                            </i>\n                        </label>\n                        <br></br>\n                        <label>2. Ancho libre (cm)</label>\n                        <input\n                            type='number'\n                            name='estrechamiento'\n                            value={form.input3}\n                            onChange={(e) =>\n                                setForm((lastValue) => ({\n                                    ...lastValue,\n                                    input3: e.target.value,\n                                }))\n                            }\n                        />\n                    </div>\n                    <div className='preguntas'>\n                        <br></br>\n                        <label>\n                            <i>\n                                En caso de que exista un estrechamiento puntual\n                                (como por ejemplo un pilar)\n                            </i>\n                        </label>\n                        {/* <></> */}\n                        <br></br>\n                        <label>3. Ancho libre (cm)</label>\n                        <input\n                            type='number'\n                            name='estrechamiento'\n                            value={form.input3}\n                            onChange={(e) =>\n                                setForm((lastValue) => ({\n                                    ...lastValue,\n                                    input3: e.target.value,\n                                }))\n                            }\n                        />\n                        <br></br>\n                        <label>4. Anchura del estrechamiento (cm)</label>\n                        <input\n                            type='number'\n                            name='estrechamiento'\n                            value={form.input4}\n                            onChange={(e) =>\n                                setForm((lastValue) => ({\n                                    ...lastValue,\n                                    input4: e.target.value,\n                                }))\n                            }\n                        />\n                        <br></br>\n                          <label>5. Ancho libre en el punto del estrechamiento (cm)</label>\n                        <input\n                            type='number'\n                            name='estrechamiento'\n                            value={form.input4}\n                            onChange={(e) =>\n                                setForm((lastValue) => ({\n                                    ...lastValue,\n                                    input4: e.target.value,\n                                }))\n                            }\n                        />\n                    </div>\n                    <div className='preguntas'>\n                        <label>\n                            <i>\n                                En caso de que su pasillo tenga una longitud de\n                                10 metros o más indique por favor su anchura\n                                (cm)\n                            </i>\n                        </label>\n                        <br></br>\n                        <label>6. Anchura libre</label>    \n                        <input\n                            type='number'\n                            name='estrechamiento'\n                            value={form.input5}\n                            onChange={(e) =>\n                                setForm((lastValue) => ({\n                                    ...lastValue,\n                                    input5: e.target.value,\n                                }))\n                            }\n                        />\n                    </div>\n                </div>\n            </fieldset>\n            <h2>Huecos de paso</h2>\n            \n         \n                <fieldset>\n\n                <div>\n                    <label>\n                        7. Anchura libre de paso de la puerta de entrada (cm)\n                    </label>\n                    <a className='img' href=\"./\">Imagen</a>\n                    <input\n                        type='number'\n                        name='hueco1'\n                        value={form.input6}\n                        onChange={(e) =>\n                            setForm((lastValue) => ({\n                                ...lastValue,\n                                input6: e.target.value,\n                            }))\n                        }\n                    />\n                </div>\n                <div>\n                    <label>\n                        8. Diámetro libre a ambos lados de la puerta de entrada a la vivienda (cm)\n                    </label>\n                    <a className='img' href=\"/\">Imagen</a>\n                    <input\n                        type='number'\n                        name='hueco2'\n                        value={form.input7}\n                        onChange={(e) =>\n                            setForm((lastValue) => ({\n                                ...lastValue,\n                                input7: e.target.value,\n                            }))\n                        }\n                    />\n                </div>\n                </fieldset>\n                <h2>Puertas de accesos interiores</h2>\n\n            \n                <fieldset>\n \n                    <p>\n                        <strong>\n                            Importante : En esta sección deberá tomar medidas de\n                            los espacios cercanos a la puertas que acceden a las\n                            diferentes habitaciones de su hogar\n                        </strong>\n                    </p>\n                    <div className='preguntas'>\n                        {/*                         <p>\n                            <strong>\n                                Importante: En este caso deberá tomar medidas\n                                del espacio libre del area que cubre la puerta\n                                (al abrir y cerrar) de su hogar.\n                            </strong>\n                        </p>{' '} */}\n\n                        <div>\n                            <label>\n                                9. Marque esta casilla en caso de que las puertas\n                                interiores tengan un ángulo de 90º o superior\n                            </label>\n                            <input\n                                type='checkbox'\n                                name='hueco2'\n                                value={form.input14}\n                                onChange={(e) =>\n                                    setForm((lastValue) => ({\n                                        ...lastValue,\n                                        input14: e.target.value,\n                                    }))\n                                }\n                            />\n                        </div>\n                        <div className='preguntas'>\n                            <div>\n                                <label>\n                                    10. Distancia entre el suelo y el pomo (cm)\n                                </label>\n                                <input\n                                    type='number'\n                                    name='hueco4'\n                                    value={form.input8}\n                                    onChange={(e) =>\n                                        setForm((lastValue) => ({\n                                            ...lastValue,\n                                            input8: e.target.value,\n                                        }))\n                                    }\n                                />\n                            </div>\n                            \n                            <div className='preguntas'>\n                                <br></br>\n                                <label>\n                                    <i>\n                                        En caso de puertas\n                                        acristaladas/transaparentes, exista\n                                        señalización sobre las mismas\n                                    </i>\n                                </label>\n\n                                {/* <input\n                                    type='checkbox'\n                                    name='hueco6'\n                                   value={form.input10}\n                                    onChange={(e) =>\n                                        setForm((lastValue) => ({\n                                            ...lastValue,\n                                            input10: e.target.value,\n                                        }))\n                                    }\n                                ></input> */}\n                                <br></br>\n                                <label>11. Anchura de la señalización</label>\n                                <input\n                                    type='number'\n                                    name='hueco6'\n                                    value={form.input10}\n                                    onChange={(e) =>\n                                        setForm((lastValue) => ({\n                                            ...lastValue,\n                                            input10: e.target.value,\n                                        }))\n                                    }\n                                />\n                            </div>\n                        </div>\n                        <div className='preguntas'>\n                            <div>\n                                <label>\n                                    <i>\n                                        En caso de puertas de doble filo(puerta\n                                        doble) con mecanismo automático (puerta\n                                        automática)de apertura y cierre, marque\n                                        esta casilla\n                                    </i>\n                                </label>\n                                <br></br>\n                                <label>\n                                   12. Anchura libre de paso \n                                </label>\n                                <input\n                                    type='number'\n                                    name='hueco6'\n                                    value={form.input11}\n                                    onChange={(e) =>\n                                        setForm((lastValue) => ({\n                                            ...lastValue,\n                                            input11: e.target.value,\n                                        }))\n                                    }\n                                />\n                            </div>\n                        </div>\n                        <div>\n                            <label>\n                                13. Tiempo estimado para apertura/cierra (segundos)\n                            </label>\n                            <input\n                                type='number'\n                                name='hueco6'\n                                value={form.input12}\n                                onChange={(e) =>\n                                    setForm((lastValue) => ({\n                                        ...lastValue,\n                                        input12: e.target.value,\n                                    }))\n                                }\n                            />\n                        </div>\n                    </div>\n                </fieldset>\n            \n            <h2>Ventanas</h2>\n            <fieldset>\n                <p>\n                    <strong>\n                        Importante: En este campo se hace refrencia a la altura\n                        a la que se encuentran en mecanismo de apertura de las\n                        ventanas de su hogar. Esta medida se toma desde el suelo\n                        hasta la manivela/pomo de la ventana.\n                    </strong>\n                </p>\n                <div>\n                    <label>14. Altura del mecanismo de apertura</label>\n                    <a className='img' href=\"./\">Imagen</a>\n                    <input\n                        type='number'\n                        name='alturaV'\n                        value={form.input13}\n                        onChange={(e) =>\n                            setForm((lastValue) => ({\n                                ...lastValue,\n                                input13: e.target.value,\n                            }))\n                        }\n                    />\n                </div>\n            </fieldset>\n            <div className='submitDiv'>\n                <button\n                    type='submit'\n                    className='submit'\n                    onClick={async () => {\n                        const data = await request(form);\n                        setForm(data);\n                    }}\n                    /*                     onClick={async () => {\n                        alert('su casa se encuentra adaptada en un 20%');\n                    }} */\n                >\n                    Submit\n                </button>\n            </div>\n        </div>    \n    </div>\n    );\n}\nexport default Form;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}